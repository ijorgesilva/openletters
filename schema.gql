### Type definitions saved at 2022-04-23T15:44:07.113Z ###

enum RemoteFileFit {
  COVER
  FILL
  OUTSIDE
  CONTAIN
}

enum RemoteFileFormat {
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum RemoteFileLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum RemoteFilePlaceholder {
  DOMINANT_COLOR
  BLURRED
  NONE
}

enum RemoteFileCropFocus {
  CENTER
  TOP
  RIGHT
  BOTTOM
  LEFT
  ENTROPY
  EDGES
  FACES
}

type RemoteFileResize {
  width: Int
  height: Int
  src: String
}

"""Remote Interface"""
interface RemoteFile {
  id: ID!
  mimeType: String!
  filename: String!
  filesize: Int
  width: Int
  height: Int
  publicUrl: String!
  resize(
    width: Int
    height: Int
    aspectRatio: Float
    fit: RemoteFileFit = COVER

    """
    
    The image formats to generate. Valid values are AUTO (meaning the same
    format as the source image), JPG, PNG, WEBP and AVIF.
    The default value is [AUTO, WEBP, AVIF], and you should rarely need to
    change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted
    results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    format: RemoteFileFormat = AUTO
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): RemoteFileResize

  """
  Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info.
  """
  gatsbyImage(
    """
    
    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if
    it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    
    """
    layout: RemoteFileLayout = CONSTRAINED

    """
    
    The display width of the generated image for layout = FIXED, and the display
    width of the largest image for layout = CONSTRAINED.
    The actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities
    Ignored if layout = FLUID.
    
    """
    width: Int

    """
    
    If set, the height of the generated image. If omitted, it is calculated from
    the supplied width, matching the aspect ratio of the source image.
    """
    height: Int

    """
    
    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    TRACED_SVG: a low-resolution traced SVG of the image.
    NONE: no placeholder. Set the argument "backgroundColor" to use a fixed background color.
    """
    placeholder: RemoteFilePlaceholder = DOMINANT_COLOR

    """
    
    If set along with width or height, this will set the value of the other
    dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    
    """
    aspectRatio: Float

    """
    
    The image formats to generate. Valid values are AUTO (meaning the same
    format as the source image), JPG, PNG, WEBP and AVIF.
    The default value is [AUTO, WEBP, AVIF], and you should rarely need to
    change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted
    results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    
    """
    formats: [RemoteFileFormat!] = [AUTO, WEBP, AVIF]

    """
    
    A list of image pixel densities to generate for FIXED and CONSTRAINED
    images. You should rarely need to change this. It will never generate images
    larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, and [0.25, 0.5, 1, 2]
    for fluid. In this case, an image with a fluid layout and width = 400 would
    generate images at 100, 200, 400 and 800px wide.
    
    """
    outputPixelDensities: [Float] = [0.25, 0.5, 1, 2]

    """
    
    Specifies the image widths to generate. You should rarely need to change
    this. For FIXED and CONSTRAINED images it is better to allow these to be
    determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override
    the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    
    """
    breakpoints: [Int] = [750, 1080, 1366, 1920]

    """
    
    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to
    decide which images to download. You can leave this blank for fixed images,
    or if the responsive image
    container will be the full width of the screen. In these cases we will generate an appropriate value.
    
    """
    sizes: String

    """
    Background color applied to the wrapper, or when "letterboxing" an image to another aspect ratio.
    """
    backgroundColor: String
    fit: RemoteFileFit = COVER
    cropFocus: [RemoteFileCropFocus]
    quality: Int = 75
  ): JSON
}

type File implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  url: String
}

type Directory implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
}

type Site implements Node @derivedTypes @dontInfer {
  buildTime: Date @dateformat
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  flags: SiteFlags
  pathPrefix: String
  polyfill: Boolean
  jsxRuntime: String
  trailingSlash: String
}

type SiteSiteMetadata @derivedTypes {
  title: String
  description: String
  siteUrl: String
  titleTemplate: String
  url: String
  image: String
  twitterUsername: String
  rssMetadata: SiteSiteMetadataRssMetadata
}

type SiteSiteMetadataRssMetadata {
  site_url: String
  feed_url: String
  title: String
  description: String
  image_url: String
  copyright: String
}

type SiteFlags {
  FAST_DEV: Boolean
  PRESERVE_FILE_DOWNLOAD_CACHE: String
  PARALLEL_SOURCING: Boolean
}

type SiteFunction implements Node @dontInfer {
  functionRoute: String!
  pluginName: String!
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
}

type SitePage implements Node @dontInfer {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  pageContext: JSON @proxy(from: "context", fromNode: false)
  pluginCreator: SitePlugin @link(by: "id", from: "pluginCreatorId")
}

type SitePlugin implements Node @dontInfer {
  resolve: String
  name: String
  version: String
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  pluginOptions: JSON
  packageJson: JSON
}

type SiteBuildMetadata implements Node @dontInfer {
  buildTime: Date @dateformat
}

enum GatsbyImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum GatsbyImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum GatsbyImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

interface WpNode {
  """The globally unique ID for the object"""
  id: ID!
}

interface WpContentNode implements Node {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The ID of the node in the database."""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Connection between the ContentNode type and the ContentType type"""
type WpContentNodeToContentTypeConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpContentType
}

"""An Post Type object"""
type WpContentType implements Node & WpNode & WpUniformResourceIdentifiable @dontInfer {
  """
  The url path of the first page of the archive page for this content type.
  """
  archivePath: String

  """Whether this content type should can be exported."""
  canExport: Boolean

  """Connection between the ContentType type and the Taxonomy type"""
  connectedTaxonomies: WpContentTypeToTaxonomyConnection

  """Connection between the ContentType type and the ContentNode type"""
  contentNodes: WpContentTypeToContentNodeConnection

  """
  Whether content of this type should be deleted when the author of it is deleted from the system.
  """
  deleteWithUser: Boolean

  """Description of the content type."""
  description: String

  """
  Whether to exclude nodes of this content type from front end search results.
  """
  excludeFromSearch: Boolean

  """The plural name of the content type within the GraphQL Schema."""
  graphqlPluralName: String

  """The singular name of the content type within the GraphQL Schema."""
  graphqlSingleName: String

  """
  Whether this content type should have archives. Content archives are generated by type and by date.
  """
  hasArchive: Boolean

  """Whether the content type is hierarchical, for example pages."""
  hierarchical: Boolean

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether this page is set to the static front page."""
  isFrontPage: Boolean!

  """Whether this page is set to the blog posts page."""
  isPostsPage: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Display name of the content type."""
  label: String

  """Details about the content type labels."""
  labels: WpPostTypeLabelDetails

  """The name of the icon file to display as a menu icon."""
  menuIcon: String

  """
  The position of this post type in the menu. Only applies if show_in_menu is true.
  """
  menuPosition: Int

  """
  The internal name of the post type. This should not be used for display purposes.
  """
  name: String

  """
  Whether a content type is intended for use publicly either via the admin
  interface or by front-end users. While the default settings of
  exclude_from_search, publicly_queryable, show_ui, and show_in_nav_menus are
  inherited from public, each does not rely on this relationship and controls a
  very specific intention.
  """
  public: Boolean

  """
  Whether queries can be performed on the front end for the content type as part of parse_request().
  """
  publiclyQueryable: Boolean

  """
  Name of content type to display in REST API &quot;wp/v2&quot; namespace.
  """
  restBase: String

  """The REST Controller class assigned to handling this content type."""
  restControllerClass: String

  """Makes this content type available via the admin bar."""
  showInAdminBar: Boolean

  """Whether to add the content type to the GraphQL Schema."""
  showInGraphql: Boolean

  """
  Where to show the content type in the admin menu. To work, $show_ui must be
  true. If true, the post type is shown in its own top level menu. If false, no
  menu is shown. If a string of an existing top level menu (eg.
  &quot;tools.php&quot; or &quot;edit.php?post_type=page&quot;), the post type
  will be placed as a sub-menu of that.
  """
  showInMenu: Boolean

  """Makes this content type available for selection in navigation menus."""
  showInNavMenus: Boolean

  """
  Whether the content type is associated with a route under the the REST API &quot;wp/v2&quot; namespace.
  """
  showInRest: Boolean

  """
  Whether to generate and allow a UI for managing this content type in the admin.
  """
  showUi: Boolean

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

interface WpUniformResourceIdentifiable {
  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The unique resource identifier path"""
  uri: String
}

"""Connection between the ContentType type and the Taxonomy type"""
type WpContentTypeToTaxonomyConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTaxonomy]
}

"""A taxonomy object"""
type WpTaxonomy implements Node & WpNode @dontInfer {
  """
  The url path of the first page of the archive page for this content type.
  """
  archivePath: String

  """List of Content Types associated with the Taxonomy"""
  connectedContentTypes: WpTaxonomyToContentTypeConnection

  """
  Description of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;description
  """
  description: String

  """The plural name of the post type within the GraphQL Schema."""
  graphqlPluralName: String

  """The singular name of the post type within the GraphQL Schema."""
  graphqlSingleName: String

  """Whether the taxonomy is hierarchical"""
  hierarchical: Boolean

  """Name of the taxonomy shown in the menu. Usually plural."""
  label: String

  """
  The display name of the taxonomy. This field is equivalent to WP_Taxonomy-&gt;label
  """
  name: String

  """Whether the taxonomy is publicly queryable"""
  public: Boolean

  """
  Name of content type to diplay in REST API &quot;wp/v2&quot; namespace.
  """
  restBase: String

  """The REST Controller class assigned to handling this content type."""
  restControllerClass: String

  """
  Whether to show the taxonomy as part of a tag cloud widget. This field is equivalent to WP_Taxonomy-&gt;show_tagcloud
  """
  showCloud: Boolean

  """
  Whether to display a column for the taxonomy on its post type listing screens.
  """
  showInAdminColumn: Boolean

  """Whether to add the post type to the GraphQL Schema."""
  showInGraphql: Boolean

  """Whether to show the taxonomy in the admin menu"""
  showInMenu: Boolean

  """Whether the taxonomy is available for selection in navigation menus."""
  showInNavMenus: Boolean

  """Whether to show the taxonomy in the quick/bulk edit panel."""
  showInQuickEdit: Boolean

  """
  Whether to add the post type route in the REST API &quot;wp/v2&quot; namespace.
  """
  showInRest: Boolean

  """
  Whether to generate and allow a UI for managing terms in this taxonomy in the admin
  """
  showUi: Boolean
  nodeType: String
}

"""Connection between the Taxonomy type and the ContentType type"""
type WpTaxonomyToContentTypeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpContentType]
}

"""Connection between the ContentType type and the ContentNode type"""
type WpContentTypeToContentNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpContentNode]
}

"""Details for labels of the PostType"""
type WpPostTypeLabelDetails {
  """Default is ‘Add New’ for both hierarchical and non-hierarchical types."""
  addNew: String

  """Label for adding a new singular item."""
  addNewItem: String

  """Label to signify all items in a submenu link."""
  allItems: String

  """Label for archives in nav menus"""
  archives: String

  """Label for the attributes meta box."""
  attributes: String

  """Label for editing a singular item."""
  editItem: String

  """Label for the Featured Image meta box title."""
  featuredImage: String

  """Label for the table views hidden heading."""
  filterItemsList: String

  """Label for the media frame button."""
  insertIntoItem: String

  """Label for the table hidden heading."""
  itemsList: String

  """Label for the table pagination hidden heading."""
  itemsListNavigation: String

  """Label for the menu name."""
  menuName: String

  """General name for the post type, usually plural."""
  name: String

  """Label for the new item page title."""
  newItem: String

  """Label used when no items are found."""
  notFound: String

  """Label used when no items are in the trash."""
  notFoundInTrash: String

  """Label used to prefix parents of hierarchical items."""
  parentItemColon: String

  """Label for removing the featured image."""
  removeFeaturedImage: String

  """Label for searching plural items."""
  searchItems: String

  """Label for setting the featured image."""
  setFeaturedImage: String

  """Name for one object of this post type."""
  singularName: String

  """Label for the media frame filter."""
  uploadedToThisItem: String

  """Label in the media frame for using a featured image."""
  useFeaturedImage: String

  """Label for viewing a singular item."""
  viewItem: String

  """Label for viewing post type archives."""
  viewItems: String
}

"""Connection between the ContentNode type and the User type"""
type WpContentNodeToEditLastConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpUser
}

"""A User object"""
type WpUser implements Node & WpNode & WpUniformResourceIdentifiable & WpCommenter & WpDatabaseIdentifier @dontInfer {
  """
  Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.
  """
  avatar: WpAvatar

  """
  User metadata option name. Usually it will be &quot;wp_capabilities&quot;.
  """
  capKey: String

  """A list of capabilities (permissions) granted to the user"""
  capabilities: [String]

  """Connection between the User type and the Comment type"""
  comments: WpUserToCommentConnection

  """Identifies the primary key from the database."""
  databaseId: Int!

  """Description of the user."""
  description: String

  """
  Email address of the user. This is equivalent to the WP_User-&gt;user_email property.
  """
  email: String

  """
  A complete list of capabilities including capabilities inherited from a role.
  This is equivalent to the array keys of WP_User-&gt;allcaps.
  """
  extraCapabilities: [String]

  """
  First name of the user. This is equivalent to the WP_User-&gt;user_first_name property.
  """
  firstName: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """
  Last name of the user. This is equivalent to the WP_User-&gt;user_last_name property.
  """
  lastName: String

  """
  The preferred language locale set for the user. Value derived from get_user_locale().
  """
  locale: String

  """
  Display name of the user. This is equivalent to the WP_User-&gt;dispaly_name property.
  """
  name: String

  """
  The nicename for the user. This field is equivalent to WP_User-&gt;user_nicename
  """
  nicename: String

  """Nickname of the user."""
  nickname: String

  """Connection between the User type and the page type"""
  pages: WpUserToPageConnection

  """Connection between the User type and the post type"""
  posts: WpUserToPostConnection

  """
  The date the user registered or was created. The field follows a full ISO8601 date string format.
  """
  registeredDate: String

  """Connection between the User type and the UserRole type"""
  roles: WpUserToUserRoleConnection

  """The Yoast SEO data of a user"""
  seo: WpSEOUser

  """
  The slug for the user. This field is equivalent to WP_User-&gt;user_nicename
  """
  slug: String

  """The unique resource identifier path"""
  uri: String

  """A website url that is associated with the user."""
  url: String

  """
  Username for the user. This field is equivalent to WP_User-&gt;user_login.
  """
  username: String
  nodeType: String
}

interface WpCommenter @isPlaceholder {
  """
  Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.
  """
  avatar: WpAvatar

  """Identifies the primary key from the database."""
  databaseId: Int!

  """The email address of the author of a comment."""
  email: String

  """The globally unique identifier for the comment author."""
  id: ID!

  """The name of the author of a comment."""
  name: String

  """The url of the author of a comment."""
  url: String
}

"""
Avatars are profile images for users. WordPress by default uses the Gravatar service to host and fetch avatars from.
"""
type WpAvatar {
  """
  URL for the default image or a default type. Accepts &#039;404&#039; (return a
  404 instead of a default image), &#039;retro&#039; (8bit),
  &#039;monsterid&#039; (monster), &#039;wavatar&#039; (cartoon face),
  &#039;indenticon&#039; (the &#039;quilt&#039;), &#039;mystery&#039;,
  &#039;mm&#039;, or &#039;mysteryman&#039; (The Oyster Man), &#039;blank&#039;
  (transparent GIF), or &#039;gravatar_default&#039; (the Gravatar logo).
  """
  default: String

  """HTML attributes to insert in the IMG element. Is not sanitized."""
  extraAttr: String

  """Whether to always show the default image, never the Gravatar."""
  forceDefault: Boolean

  """Whether the avatar was successfully found."""
  foundAvatar: Boolean

  """Height of the avatar image."""
  height: Int

  """
  What rating to display avatars up to. Accepts &#039;G&#039;, &#039;PG&#039;,
  &#039;R&#039;, &#039;X&#039;, and are judged in that order.
  """
  rating: String

  """Type of url scheme to use. Typically HTTP vs. HTTPS."""
  scheme: String

  """
  The size of the avatar in pixels. A value of 96 will match a 96px x 96px gravatar image.
  """
  size: Int

  """URL for the gravatar image source."""
  url: String

  """Width of the avatar image."""
  width: Int
}

interface WpDatabaseIdentifier @isPlaceholder {
  """The unique identifier stored in the database"""
  databaseId: Int!
}

"""Connection between the User type and the Comment type"""
type WpUserToCommentConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpComment]
}

"""A Comment object"""
type WpComment implements Node & WpNode & WpDatabaseIdentifier @dontInfer {
  """
  User agent used to post the comment. This field is equivalent to
  WP_Comment-&gt;comment_agent and the value matching the
  &quot;comment_agent&quot; column in SQL.
  """
  agent: String

  """
  The approval status of the comment. This field is equivalent to
  WP_Comment-&gt;comment_approved and the value matching the
  &quot;comment_approved&quot; column in SQL.
  """
  approved: Boolean

  """The author of the comment"""
  author: WpCommentToCommenterConnectionEdge

  """
  IP address for the author. This field is equivalent to
  WP_Comment-&gt;comment_author_IP and the value matching the
  &quot;comment_author_IP&quot; column in SQL.
  """
  authorIp: String

  """Connection between the Comment type and the ContentNode type"""
  commentedOn: WpCommentToContentNodeConnectionEdge

  """
  Content of the comment. This field is equivalent to
  WP_Comment-&gt;comment_content and the value matching the
  &quot;comment_content&quot; column in SQL.
  """
  content: String

  """The unique identifier stored in the database"""
  databaseId: Int!

  """
  Date the comment was posted in local time. This field is equivalent to
  WP_Comment-&gt;date and the value matching the &quot;date&quot; column in SQL.
  """
  date: Date @dateformat

  """
  Date the comment was posted in GMT. This field is equivalent to
  WP_Comment-&gt;date_gmt and the value matching the &quot;date_gmt&quot; column in SQL.
  """
  dateGmt: Date @dateformat

  """
  Karma value for the comment. This field is equivalent to
  WP_Comment-&gt;comment_karma and the value matching the
  &quot;comment_karma&quot; column in SQL.
  """
  karma: Int

  """Connection between the Comment type and the Comment type"""
  wpParent: WpCommentToParentCommentConnectionEdge

  """
  The database id of the parent comment node or null if it is the root comment
  """
  parentDatabaseId: Int

  """The globally unique identifier of the parent comment node."""
  parentId: ID

  """Connection between the Comment type and the Comment type"""
  replies: WpCommentToCommentConnection

  """
  Type of comment. This field is equivalent to WP_Comment-&gt;comment_type and
  the value matching the &quot;comment_type&quot; column in SQL.
  """
  type: String
  nodeType: String
}

"""Connection between the Comment type and the Commenter type"""
type WpCommentToCommenterConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpCommenter
}

"""Connection between the Comment type and the ContentNode type"""
type WpCommentToContentNodeConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpContentNode
}

"""Connection between the Comment type and the Comment type"""
type WpCommentToParentCommentConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpComment
}

"""Connection between the Comment type and the Comment type"""
type WpCommentToCommentConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpComment]
}

"""Connection between the User type and the page type"""
type WpUserToPageConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpPage]
}

"""The page type"""
type WpPage implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithContentEditor & WpNodeWithAuthor & WpNodeWithFeaturedImage & WpNodeWithComments & WpNodeWithRevisions & WpNodeWithPageAttributes & WpHierarchicalContentNode & WpMenuItemLinkable @dontInfer {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the NodeWithAuthor type and the User type"""
  author: WpNodeWithAuthorToUserConnectionEdge

  """The database identifier of the author of the node"""
  authorDatabaseId: Int

  """The globally unique identifier of the author of the node"""
  authorId: ID

  """Connection between the page type and the category type"""
  categories: WpPageToCategoryConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """
  The number of comments. Even though WPGraphQL denotes this field as an
  integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """Connection between the page type and the Comment type"""
  comments: WpPageToCommentConnection

  """The content of the post."""
  content: String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether this page is set to the static front page."""
  isFrontPage: Boolean!

  """Whether this page is set to the blog posts page."""
  isPostsPage: Boolean!

  """Whether this page is set to the privacy page."""
  isPrivacyPage: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  A field used for ordering posts. This is typically used with nav menu items or
  for special ordering of hierarchical content types.
  """
  menuOrder: Int

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Page Details&quot; was set to Show in GraphQL.
  """
  pageDetails: WpPage_Pagedetails

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """The Yoast SEO data of the page"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """Connection between the page type and the TermNode type"""
  terms: WpPageToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpPage]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

interface WpNodeWithTemplate @isPlaceholder {
  """The template assigned to the node"""
  template: WpContentTemplate
}

interface WpContentTemplate {
  """The name of the template"""
  templateName: String
}

interface WpNodeWithTitle @isPlaceholder {
  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String
}

interface WpNodeWithContentEditor @isPlaceholder {
  """The content of the post."""
  content: String
}

interface WpNodeWithAuthor @isPlaceholder {
  """Connection between the NodeWithAuthor type and the User type"""
  author: WpNodeWithAuthorToUserConnectionEdge

  """The database identifier of the author of the node"""
  authorDatabaseId: Int

  """The globally unique identifier of the author of the node"""
  authorId: ID
}

"""Connection between the NodeWithAuthor type and the User type"""
type WpNodeWithAuthorToUserConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpUser
}

interface WpNodeWithFeaturedImage @isPlaceholder {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique identifier stored in the database"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """The unique resource identifier path"""
  uri: String
}

"""
Connection between the NodeWithFeaturedImage type and the MediaItem type
"""
type WpNodeWithFeaturedImageToMediaItemConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpMediaItem
}

"""The mediaItem type"""
type WpMediaItem implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithAuthor & WpNodeWithComments & WpHierarchicalContentNode & RemoteFile @dontInfer {
  """Alternative text to display when resource is not displayed"""
  altText: String

  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the NodeWithAuthor type and the User type"""
  author: WpNodeWithAuthorToUserConnectionEdge

  """The database identifier of the author of the node"""
  authorDatabaseId: Int

  """The globally unique identifier of the author of the node"""
  authorId: ID

  """The caption for the resource"""
  caption: String

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """
  The number of comments. Even though WPGraphQL denotes this field as an
  integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """Connection between the mediaItem type and the Comment type"""
  comments: WpMediaItemToCommentConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique identifier stored in the database"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """Description of the image (stored as post_content)"""
  description: String

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """The filesize in bytes of the resource"""
  fileSize: Int

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """Details about the mediaItem"""
  mediaDetails: WpMediaDetails

  """Url of the mediaItem"""
  mediaItemUrl: String

  """Type of resource"""
  mediaType: String

  """The mime type of the mediaItem"""
  mimeType: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """The Yoast SEO data of the mediaItem"""
  seo: WpPostTypeSEO

  """The sizes attribute value for an image."""
  sizes: String

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """Url of the mediaItem"""
  sourceUrl: String

  """
  The srcset attribute specifies the URL of the image to use in different
  situations. It is a comma separated string of urls and their widths.
  """
  srcSet: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """The unique resource identifier path"""
  uri: String
  nodeType: String
  remoteFile: File @deprecated(reason: "MediaItem.remoteFile was renamed to localFile")
  localFile: File @link(from: "localFile", by: "id")
}

interface WpNodeWithComments @isPlaceholder {
  """
  The number of comments. Even though WPGraphQL denotes this field as an
  integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String
}

interface WpHierarchicalContentNode @isPlaceholder {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID
}

"""
Connection between the HierarchicalContentNode type and the ContentNode type
"""
type WpHierarchicalContentNodeToContentNodeAncestorsConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpContentNode]
}

"""
Connection between the HierarchicalContentNode type and the ContentNode type
"""
type WpHierarchicalContentNodeToContentNodeChildrenConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpContentNode]
}

"""
Connection between the HierarchicalContentNode type and the ContentNode type
"""
type WpHierarchicalContentNodeToParentContentNodeConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpContentNode
}

"""Connection between the mediaItem type and the Comment type"""
type WpMediaItemToCommentConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpComment]
}

"""File details for a Media Item"""
type WpMediaDetails {
  """The filename of the mediaItem"""
  file: String

  """The height of the mediaItem"""
  height: Int

  """Meta information associated with the mediaItem"""
  meta: WpMediaItemMeta

  """The available sizes of the mediaItem"""
  sizes: [WpMediaSize]

  """The width of the mediaItem"""
  width: Int
}

"""Meta connected to a MediaItem"""
type WpMediaItemMeta {
  """Aperture measurement of the media item."""
  aperture: Float

  """Information about the camera used to create the media item."""
  camera: String

  """The text string description associated with the media item."""
  caption: String

  """Copyright information associated with the media item."""
  copyright: String

  """The date/time when the media was created."""
  createdTimestamp: Int

  """The original creator of the media item."""
  credit: String

  """The focal length value of the media item."""
  focalLength: Float

  """
  The ISO (International Organization for Standardization) value of the media item.
  """
  iso: Int

  """List of keywords used to describe or identfy the media item."""
  keywords: [String]

  """The vertical or horizontal aspect of the media item."""
  orientation: String

  """The shutter speed information of the media item."""
  shutterSpeed: Float

  """A useful title for the media item."""
  title: String
}

"""Details of an available size for a media item"""
type WpMediaSize {
  """The filename of the referenced size"""
  file: String

  """The filesize of the resource"""
  fileSize: Int

  """The height of the referenced size"""
  height: String

  """The mime type of the referenced size"""
  mimeType: String

  """The referenced size name"""
  name: String

  """The url of the referenced size"""
  sourceUrl: String

  """The width of the referenced size"""
  width: String
}

type WpPostTypeSEO {
  breadcrumbs: [WpSEOPostTypeBreadcrumbs]
  canonical: String
  cornerstone: Boolean
  focuskw: String
  fullHead: String
  metaDesc: String
  metaKeywords: String
  metaRobotsNofollow: String
  metaRobotsNoindex: String
  opengraphAuthor: String
  opengraphDescription: String
  opengraphImage: WpMediaItem
  opengraphModifiedTime: String
  opengraphPublishedTime: String
  opengraphPublisher: String
  opengraphSiteName: String
  opengraphTitle: String
  opengraphType: String
  opengraphUrl: String
  readingTime: Float
  schema: WpSEOPostTypeSchema
  title: String
  twitterDescription: String
  twitterImage: WpMediaItem
  twitterTitle: String
}

type WpSEOPostTypeBreadcrumbs {
  text: String
  url: String
}

"""The Schema types"""
type WpSEOPostTypeSchema {
  articleType: [String]
  pageType: [String]
  raw: String
}

interface WpNodeWithRevisions @isPlaceholder {
  """True if the node is a revision of another node"""
  isRevision: Boolean
}

interface WpNodeWithPageAttributes @isPlaceholder {
  """
  A field used for ordering posts. This is typically used with nav menu items or
  for special ordering of hierarchical content types.
  """
  menuOrder: Int
}

interface WpMenuItemLinkable @isPlaceholder {
  """The unique resource identifier path"""
  databaseId: Int!

  """The unique resource identifier path"""
  id: ID!

  """The unique resource identifier path"""
  uri: String
}

"""Connection between the page type and the category type"""
type WpPageToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""The category type"""
type WpCategory implements Node & WpNode & WpTermNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpHierarchicalTermNode & WpMenuItemLinkable @dontInfer {
  """
  The ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpCategoryToAncestorsCategoryConnection

  """Connection between the category type and the category type"""
  wpChildren: WpCategoryToCategoryConnection

  """Connection between the category type and the ContentNode type"""
  contentNodes: WpCategoryToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """Connection between the category type and the course type"""
  courses: WpCategoryToCourseConnection

  """The unique resource identifier path"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the category type and the event type"""
  events: WpCategoryToEventConnection

  """Connection between the category type and the groupType type"""
  groupTypes: WpCategoryToGroupTypeConnection

  """Connection between the category type and the group type"""
  groups: WpCategoryToGroupConnection

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """List available translations for this post"""
  language: WpLanguage

  """Connection between the category type and the lesson type"""
  lessons: WpCategoryToLessonConnection

  """The link to the term"""
  link: String

  """Connection between the category type and the ministry type"""
  ministries: WpCategoryToMinistryConnection

  """The human friendly name of the object."""
  name: String

  """Connection between the category type and the newspost type"""
  newsposts: WpCategoryToNewspostConnection

  """Connection between the category type and the page type"""
  pages: WpCategoryToPageConnection

  """Connection between the category type and the category type"""
  wpParent: WpCategoryToParentCategoryConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """Connection between the category type and the post type"""
  posts: WpCategoryToPostConnection

  """The Yoast SEO data of the Categories taxonomy."""
  seo: WpTaxonomySEO

  """Connection between the category type and the Serie type"""
  series: WpCategoryToSerieConnection

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the category type and the speaker type"""
  speakers: WpCategoryToSpeakerConnection

  """Connection between the category type and the Taxonomy type"""
  taxonomy: WpCategoryToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """List all translated versions of this term"""
  translations: [WpCategory]

  """The unique resource identifier path"""
  uri: String

  """Connection between the category type and the videoOnDemand type"""
  videosOnDemand: WpCategoryToVideoOnDemandConnection

  """Connection between the category type and the volunteeropportunity type"""
  volunteeropportunities: WpCategoryToVolunteeropportunityConnection
  nodeType: String
}

interface WpTermNode implements Node @isPlaceholder {
  """The number of objects connected to the object"""
  count: Int

  """Identifies the primary key from the database."""
  databaseId: Int!

  """The description of the object"""
  description: String

  """The unique resource identifier path"""
  id: ID!

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

interface WpHierarchicalTermNode @isPlaceholder {
  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID
}

"""Connection between the category type and the category type"""
type WpCategoryToAncestorsCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Connection between the category type and the category type"""
type WpCategoryToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Connection between the category type and the ContentNode type"""
type WpCategoryToContentNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpContentNode]
}

"""Connection between the category type and the course type"""
type WpCategoryToCourseConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCourse]
}

"""The course type"""
type WpCourse implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithRevisions & WpHierarchicalContentNode & WpMenuItemLinkable @dontInfer {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the course type and the category type"""
  categories: WpCourseToCategoryConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Course Details&quot; was set to Show in GraphQL.
  """
  courseDetails: WpCourse_Coursedetails

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;General&quot; was set to Show in GraphQL.
  """
  general: WpCourse_General

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Layout&quot; was set to Show in GraphQL.
  """
  pageLayout: WpCourse_Pagelayout

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Content&quot; was set to Show in GraphQL.
  """
  postContent: WpCourse_Postcontent

  """The Yoast SEO data of the course"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the course type and the tag type"""
  tags: WpCourseToTagConnection

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the course type and the TermNode type"""
  terms: WpCourseToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """The unique resource identifier path"""
  uri: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Visibility&quot; was set to Show in GraphQL.
  """
  visibility: WpCourse_Visibility
  nodeType: String
}

"""Connection between the course type and the category type"""
type WpCourseToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpCourse_Coursedetails implements WpAcfFieldGroup {
  courseCertificate: Boolean

  """Use for adding additional information and rich content."""
  courseDescription: String
  courseDuration: WpCourse_Coursedetails_CourseDuration
  courseInstructors: [WpCourse_Coursedetails_CourseInstructors]
  courseLanguages: [String]
  courseMediaThumbnail: WpMediaItem

  """
  Please use .m3u8 files for adaptive streaming (quality adapts to user device and internet connection)
  """
  courseMediaTrailer: String
  courseModality: String
  coursePace: String
  courseProvider: WpCourse_Coursedetails_CourseProvider
  courseTimeLocation: WpCourse_Coursedetails_CourseTimeLocation

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

interface WpAcfFieldGroup @isPlaceholder {
  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpCourse_Coursedetails_CourseDuration implements WpAcfFieldGroup {
  duration: Float

  """The name of the ACF Field Group"""
  fieldGroupName: String
  weeklyHours: Float
}

union WpCourse_Coursedetails_CourseInstructors = WpSpeaker

"""Field Group"""
type WpCourse_Coursedetails_CourseProvider implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  providerExternal: WpCourse_Coursedetails_CourseProvider_ProviderExternal

  """Select the course provider."""
  providerType: String
}

"""Field Group"""
type WpCourse_Coursedetails_CourseProvider_ProviderExternal implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  providerExternalUrl: String
  providerExternalUrlText: String
}

"""Field Group"""
type WpCourse_Coursedetails_CourseTimeLocation implements WpAcfFieldGroup {
  endDate: String
  endDateActive: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
  location: [WpCourse_Coursedetails_CourseTimeLocation_Location]
  startDate: String
}

union WpCourse_Coursedetails_CourseTimeLocation_Location = WpEventVenue

"""Field Group"""
type WpCourse_General implements WpAcfFieldGroup {
  campus: [WpCourse_General_Campus]
  campusId: String
  featuredPhoto: WpMediaItem

  """The name of the ACF Field Group"""
  fieldGroupName: String
  summary: String
}

union WpCourse_General_Campus = WpCampus

"""Field Group"""
type WpCourse_Pagelayout implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageLayout: [WpCourse_Pagelayout_PageLayout]
}

union WpCourse_Pagelayout_PageLayout = WpContentSection

"""Field Group"""
type WpCourse_Postcontent implements WpAcfFieldGroup {
  content: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Connection between the course type and the tag type"""
type WpCourseToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""The tag type"""
type WpTag implements Node & WpNode & WpTermNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpMenuItemLinkable @dontInfer {
  """Connection between the tag type and the ContentNode type"""
  contentNodes: WpTagToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """Connection between the tag type and the course type"""
  courses: WpTagToCourseConnection

  """The unique resource identifier path"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Connection between the tag type and the event type"""
  events: WpTagToEventConnection

  """Connection between the tag type and the groupType type"""
  groupTypes: WpTagToGroupTypeConnection

  """Connection between the tag type and the group type"""
  groups: WpTagToGroupConnection

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """List available translations for this post"""
  language: WpLanguage

  """Connection between the tag type and the lesson type"""
  lessons: WpTagToLessonConnection

  """The link to the term"""
  link: String

  """Connection between the tag type and the ministry type"""
  ministries: WpTagToMinistryConnection

  """The human friendly name of the object."""
  name: String

  """Connection between the tag type and the newspost type"""
  newsposts: WpTagToNewspostConnection

  """Connection between the tag type and the post type"""
  posts: WpTagToPostConnection

  """The Yoast SEO data of the Tags taxonomy."""
  seo: WpTaxonomySEO

  """Connection between the tag type and the Serie type"""
  series: WpTagToSerieConnection

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the tag type and the Taxonomy type"""
  taxonomy: WpTagToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """List all translated versions of this term"""
  translations: [WpTag]

  """The unique resource identifier path"""
  uri: String

  """Connection between the tag type and the videoOnDemand type"""
  videosOnDemand: WpTagToVideoOnDemandConnection

  """Connection between the tag type and the volunteeropportunity type"""
  volunteeropportunities: WpTagToVolunteeropportunityConnection
  nodeType: String
}

"""Connection between the tag type and the ContentNode type"""
type WpTagToContentNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpContentNode]
}

"""Connection between the tag type and the course type"""
type WpTagToCourseConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCourse]
}

"""Connection between the tag type and the event type"""
type WpTagToEventConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpEvent]
}

type WpEvent implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithContentEditor & WpNodeWithFeaturedImage & WpNodeWithExcerpt & WpHierarchicalContentNode & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the event type and the category type"""
  categories: WpEventToCategoryConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """The content of the post."""
  content: String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Event Details&quot; was set to Show in GraphQL.
  """
  eventDetails: WpEvent_Eventdetails

  """The excerpt of the post."""
  excerpt: String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """The Yoast SEO data of the event"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the event type and the tag type"""
  tags: WpEventToTagConnection

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """Connection between the event type and the TermNode type"""
  terms: WpEventToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpEvent]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

interface WpNodeWithExcerpt @isPlaceholder {
  """The excerpt of the post."""
  excerpt: String
}

"""Connection between the event type and the category type"""
type WpEventToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpEvent_Eventdetails implements WpAcfFieldGroup {
  eventAddress: String
  eventCampus: [WpEvent_Eventdetails_EventCampus]
  eventCampusId: String
  eventDates: [WpEvent_Eventdetails_eventDates]

  """
  When Activated the event will be only an external link and a page will not be created.
  """
  eventExternalOnly: Boolean

  """
  If activated this event will show on top of the event list until it&#039;s replaced for a newer featured event.
  """
  eventFeatured: Boolean
  eventHide: WpEvent_Eventdetails_EventHide
  eventLayout: String

  """External Registration URL"""
  eventLink: WpEvent_Eventdetails_EventLink
  eventRegistrationType: String
  eventSections: [WpEvent_Eventdetails_EventSections]

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

union WpEvent_Eventdetails_EventCampus = WpCampus

"""Field Group"""
type WpEvent_Eventdetails_eventDates implements WpAcfFieldGroup {
  eventDate: String
  eventTime: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpEvent_Eventdetails_EventHide implements WpAcfFieldGroup {
  eventHideSearchEngines: Boolean
  eventHideSearchResults: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpEvent_Eventdetails_EventLink implements WpAcfFieldGroup {
  eventLinkText: String

  """External Link"""
  eventLinkUrl: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

union WpEvent_Eventdetails_EventSections = WpContentSection

"""Language (Polylang)"""
type WpLanguage {
  """Language code (Polylang)"""
  code: WpLanguageCodeEnum

  """Language term front page URL"""
  homeUrl: String

  """Language ID (Polylang)"""
  id: ID!

  """Language locale (Polylang)"""
  locale: String

  """Human readable language name (Polylang)"""
  name: String

  """
  Language term slug. Prefer the &quot;code&quot; field if possible (Polylang)
  """
  slug: String
}

"""Enum of all available language codes"""
enum WpLanguageCodeEnum {
  EN
}

"""Connection between the event type and the tag type"""
type WpEventToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the event type and the TermNode type"""
type WpEventToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Connection between the tag type and the groupType type"""
type WpTagToGroupTypeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpGroupType]
}

"""The groupType type"""
type WpGroupType implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithRevisions & WpHierarchicalContentNode & WpMenuItemLinkable @dontInfer {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the groupType type and the category type"""
  categories: WpGroupTypeToCategoryConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;General&quot; was set to Show in GraphQL.
  """
  general: WpGroupType_General

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Group Type Details&quot; was set to Show in GraphQL.
  """
  groupTypeDetails: WpGroupType_Grouptypedetails

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Content&quot; was set to Show in GraphQL.
  """
  postContent: WpGroupType_Postcontent

  """The Yoast SEO data of the groupType"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the groupType type and the tag type"""
  tags: WpGroupTypeToTagConnection

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the groupType type and the TermNode type"""
  terms: WpGroupTypeToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpGroupType]

  """The unique resource identifier path"""
  uri: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Visibility&quot; was set to Show in GraphQL.
  """
  visibility: WpGroupType_Visibility
  nodeType: String
}

"""Connection between the groupType type and the category type"""
type WpGroupTypeToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpGroupType_General implements WpAcfFieldGroup {
  campus: [WpGroupType_General_Campus]
  campusId: String
  featuredPhoto: WpMediaItem

  """The name of the ACF Field Group"""
  fieldGroupName: String
  summary: String
}

union WpGroupType_General_Campus = WpCampus

"""Field Group"""
type WpGroupType_Grouptypedetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  groupTypeTagline: String
}

"""Field Group"""
type WpGroupType_Postcontent implements WpAcfFieldGroup {
  content: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Connection between the groupType type and the tag type"""
type WpGroupTypeToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the groupType type and the TermNode type"""
type WpGroupTypeToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Field Group"""
type WpGroupType_Visibility implements WpAcfFieldGroup {
  """
  Public hidden page, a direct link will be needed to access. The feeds are the lists generated on the website.
  """
  feeds: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hide: Boolean
  searchEngines: Boolean
  searchResults: Boolean
}

"""Connection between the tag type and the group type"""
type WpTagToGroupConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpGroup]
}

"""The group type"""
type WpGroup implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithRevisions & WpMenuItemLinkable @dontInfer {
  """Connection between the group type and the category type"""
  categories: WpGroupToCategoryConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;General&quot; was set to Show in GraphQL.
  """
  general: WpGroup_General

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Group Details&quot; was set to Show in GraphQL.
  """
  groupDetails: WpGroup_Groupdetails

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The Yoast SEO data of the group"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the group type and the tag type"""
  tags: WpGroupToTagConnection

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the group type and the TermNode type"""
  terms: WpGroupToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpGroup]

  """The unique resource identifier path"""
  uri: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Visibility&quot; was set to Show in GraphQL.
  """
  visibility: WpGroup_Visibility
  nodeType: String
}

"""Connection between the group type and the category type"""
type WpGroupToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpGroup_General implements WpAcfFieldGroup {
  campus: [WpGroup_General_Campus]
  campusId: String
  featuredPhoto: WpMediaItem

  """The name of the ACF Field Group"""
  fieldGroupName: String
  summary: String
}

union WpGroup_General_Campus = WpCampus

"""Field Group"""
type WpGroup_Groupdetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  groupChildcare: Boolean

  """Respond to how often and when the group meet."""
  groupDays: WpGroup_Groupdetails_GroupDays
  groupGender: String
  groupLeaders: [WpGroup_Groupdetails_GroupLeaders]

  """
  Use &lt;strong&gt;Area&lt;/strong&gt; when do you want to provide your leader&#039;s group city area.
  """
  groupLocationArea: WpGroup_Groupdetails_GroupLocationArea
  groupLocationType: String
  groupModality: String

  """
  Select Start and End time to determine when sign up will be open and when it closes.
  """
  groupSignup: WpGroup_Groupdetails_GroupSignup

  """How many spots/seats does this group have."""
  groupSpots: WpGroup_Groupdetails_GroupSpots
  groupTopics: [WpTermObjectUnion]
}

"""Field Group"""
type WpGroup_Groupdetails_GroupDays implements WpAcfFieldGroup {
  duration: Float

  """The name of the ACF Field Group"""
  fieldGroupName: String
  frequency: String
  startTime: String
  week: String
  weekday: String
}

union WpGroup_Groupdetails_GroupLeaders = WpSpeaker

"""Field Group"""
type WpGroup_Groupdetails_GroupLocationArea implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  groupLocationArea: WpTermObjectUnion
  groupLocationCountry: String
}

union WpTermObjectUnion = WpCategory | WpTag | WpPostFormat | WpLinkTag

"""Field Group"""
type WpGroup_Groupdetails_GroupSignup implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  groupSignupEnds: String
  groupSignupStarts: String
}

"""Field Group"""
type WpGroup_Groupdetails_GroupSpots implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  groupSpotsTotal: Float
  groupSpotsUsed: Float
}

"""Connection between the group type and the tag type"""
type WpGroupToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the group type and the TermNode type"""
type WpGroupToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Field Group"""
type WpGroup_Visibility implements WpAcfFieldGroup {
  """
  Public hidden page, a direct link will be needed to access. The feeds are the lists generated on the website.
  """
  feeds: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hide: Boolean
  searchEngines: Boolean
  searchResults: Boolean
}

"""Connection between the tag type and the lesson type"""
type WpTagToLessonConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpLesson]
}

"""The lesson type"""
type WpLesson implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithRevisions & WpHierarchicalContentNode & WpMenuItemLinkable @dontInfer {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the lesson type and the category type"""
  categories: WpLessonToCategoryConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Lesson Details&quot; was set to Show in GraphQL.
  """
  lessonDetails: WpLesson_Lessondetails

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Layout&quot; was set to Show in GraphQL.
  """
  pageLayout: WpLesson_Pagelayout

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """The Yoast SEO data of the lesson"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the lesson type and the tag type"""
  tags: WpLessonToTagConnection

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the lesson type and the TermNode type"""
  terms: WpLessonToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Connection between the lesson type and the category type"""
type WpLessonToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpLesson_Lessondetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  lessonCourse: [WpLesson_Lessondetails_LessonCourse]
  lessonCourseId: String
  lessonSummary: String
}

union WpLesson_Lessondetails_LessonCourse = WpCourse

"""Field Group"""
type WpLesson_Pagelayout implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageLayout: [WpLesson_Pagelayout_PageLayout]
}

union WpLesson_Pagelayout_PageLayout = WpContentSection

"""Connection between the lesson type and the tag type"""
type WpLessonToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the lesson type and the TermNode type"""
type WpLessonToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Connection between the tag type and the ministry type"""
type WpTagToMinistryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpMinistry]
}

"""The ministry type"""
type WpMinistry implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithRevisions & WpHierarchicalContentNode & WpMenuItemLinkable @dontInfer {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the ministry type and the category type"""
  categories: WpMinistryToCategoryConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;General&quot; was set to Show in GraphQL.
  """
  general: WpMinistry_General

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Ministry Details&quot; was set to Show in GraphQL.
  """
  ministryDetails: WpMinistry_Ministrydetails

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """The Yoast SEO data of the ministry"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the ministry type and the tag type"""
  tags: WpMinistryToTagConnection

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the ministry type and the TermNode type"""
  terms: WpMinistryToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """The unique resource identifier path"""
  uri: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Visibility&quot; was set to Show in GraphQL.
  """
  visibility: WpMinistry_Visibility
  nodeType: String
}

"""Connection between the ministry type and the category type"""
type WpMinistryToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpMinistry_General implements WpAcfFieldGroup {
  campus: [WpMinistry_General_Campus]
  campusId: String
  featuredPhoto: WpMediaItem

  """The name of the ACF Field Group"""
  fieldGroupName: String
  summary: String
}

union WpMinistry_General_Campus = WpCampus

"""Field Group"""
type WpMinistry_Ministrydetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Pages deactivated on the &lt;a href=&quot;l/wp/wp-admin/admin.php?page=website-general-settings&amp;heading=true&quot;
  title=&quot;Site Settings&quot; target=&quot;_blank&quot;&gt;Site
  Settings&lt;/a&gt; and/or &lt;a
  href=&quot;/wp/wp-admin/edit.php?post_type=campus&quot;  title=&quot;Campus
  List&quot; target=&quot;_blank&quot;&gt;Campus&lt;/a&gt; Configuration will be
  not shown on the website even if it&#039;s activated here. If the page
  creation is deactivated, please contact the site&#039;s administrator.
  """
  ministryPages: WpMinistry_Ministrydetails_MinistryPages

  """Add custom pages along with the predefined options."""
  ministryPagesCustom: [WpMinistry_Ministrydetails_ministryPagesCustom]
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  ministryPageBlogNews: WpMinistry_Ministrydetails_MinistryPages_MinistryPageBlogNews
  ministryPageCourses: WpMinistry_Ministrydetails_MinistryPages_MinistryPageCourses
  ministryPageEvents: WpMinistry_Ministrydetails_MinistryPages_MinistryPageEvents
  ministryPageFrontpage: WpMinistry_Ministrydetails_MinistryPages_MinistryPageFrontpage
  ministryPageGroups: WpMinistry_Ministrydetails_MinistryPages_MinistryPageGroups
  ministryPageVideos: WpMinistry_Ministrydetails_MinistryPages_MinistryPageVideos
  ministryPageVolunteering: WpMinistry_Ministrydetails_MinistryPages_MinistryPageVolunteering
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageBlogNews implements WpAcfFieldGroup {
  active: Boolean
  feed: Boolean

  """Items will be shown if the category has items associated."""
  feedCategory: [WpCategory]
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpMinistry_Ministrydetails_MinistryPages_MinistryPageBlogNews_ItemConfiguration

  """Leave empty to use default."""
  menuTitle: String

  """Add a number to order the page menu item on the ministry page."""
  menuWeight: Float
  sections: [WpMinistry_Ministrydetails_MinistryPages_MinistryPageBlogNews_Sections]
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageBlogNews_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpMinistry_Ministrydetails_MinistryPages_MinistryPageBlogNews_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float

  """Numbered: Add counter on top with Image on Top"""
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String

  """
  Skips the specified number of items at the beginning of the list (newest).
  """
  skip: Float
  sorting: String
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageBlogNews_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

union WpMinistry_Ministrydetails_MinistryPages_MinistryPageBlogNews_Sections = WpContentSection

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageCourses implements WpAcfFieldGroup {
  active: Boolean
  feed: Boolean

  """Items will be shown if the category has items associated."""
  feedCategory: [WpCategory]
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpMinistry_Ministrydetails_MinistryPages_MinistryPageCourses_ItemConfiguration

  """Leave empty to use default."""
  menuTitle: String

  """Add a number to order the page menu item on the ministry page."""
  menuWeight: Float
  sections: [WpMinistry_Ministrydetails_MinistryPages_MinistryPageCourses_Sections]
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageCourses_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpMinistry_Ministrydetails_MinistryPages_MinistryPageCourses_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float

  """Numbered: Add counter on top with Image on Top"""
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String

  """
  Skips the specified number of items at the beginning of the list (newest).
  """
  skip: Float
  sorting: String
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageCourses_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

union WpMinistry_Ministrydetails_MinistryPages_MinistryPageCourses_Sections = WpContentSection

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageEvents implements WpAcfFieldGroup {
  active: Boolean
  feed: Boolean

  """Items will be shown if the category has items associated."""
  feedCategory: [WpCategory]
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpMinistry_Ministrydetails_MinistryPages_MinistryPageEvents_ItemConfiguration

  """Leave empty to use default."""
  menuTitle: String

  """Add a number to order the page menu item on the ministry page."""
  menuWeight: Float
  sections: [WpMinistry_Ministrydetails_MinistryPages_MinistryPageEvents_Sections]
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageEvents_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpMinistry_Ministrydetails_MinistryPages_MinistryPageEvents_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float

  """Numbered: Add counter on top with Image on Top"""
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String

  """
  Skips the specified number of items at the beginning of the list (newest).
  """
  skip: Float
  sorting: String
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageEvents_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

union WpMinistry_Ministrydetails_MinistryPages_MinistryPageEvents_Sections = WpContentSection

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageFrontpage implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Auto-generates page using provided content. A hero, description, and share bar will be added automatically when true.
  """
  generatePage: Boolean
  sections: [WpMinistry_Ministrydetails_MinistryPages_MinistryPageFrontpage_Sections]
}

union WpMinistry_Ministrydetails_MinistryPages_MinistryPageFrontpage_Sections = WpContentSection

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageGroups implements WpAcfFieldGroup {
  active: Boolean
  feed: Boolean

  """Items will be shown if the category has items associated."""
  feedCategory: [WpCategory]
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpMinistry_Ministrydetails_MinistryPages_MinistryPageGroups_ItemConfiguration

  """Leave empty to use default."""
  menuTitle: String

  """Add a number to order the page menu item on the ministry page."""
  menuWeight: Float
  sections: [WpMinistry_Ministrydetails_MinistryPages_MinistryPageGroups_Sections]
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageGroups_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpMinistry_Ministrydetails_MinistryPages_MinistryPageGroups_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float

  """Numbered: Add counter on top with Image on Top"""
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String

  """
  Skips the specified number of items at the beginning of the list (newest).
  """
  skip: Float
  sorting: String
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageGroups_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

union WpMinistry_Ministrydetails_MinistryPages_MinistryPageGroups_Sections = WpContentSection

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageVideos implements WpAcfFieldGroup {
  active: Boolean
  feed: Boolean

  """Items will be shown if the category has items associated."""
  feedCategory: [WpCategory]
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpMinistry_Ministrydetails_MinistryPages_MinistryPageVideos_ItemConfiguration

  """Leave empty to use default."""
  menuTitle: String

  """Add a number to order the page menu item on the ministry page."""
  menuWeight: Float
  sections: [WpMinistry_Ministrydetails_MinistryPages_MinistryPageVideos_Sections]
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageVideos_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpMinistry_Ministrydetails_MinistryPages_MinistryPageVideos_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float

  """Numbered: Add counter on top with Image on Top"""
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String

  """
  Skips the specified number of items at the beginning of the list (newest).
  """
  skip: Float
  sorting: String
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageVideos_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

union WpMinistry_Ministrydetails_MinistryPages_MinistryPageVideos_Sections = WpContentSection

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageVolunteering implements WpAcfFieldGroup {
  active: Boolean
  feed: Boolean

  """Items will be shown if the category has items associated."""
  feedCategory: [WpCategory]
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpMinistry_Ministrydetails_MinistryPages_MinistryPageVolunteering_ItemConfiguration

  """Leave empty to use default."""
  menuTitle: String

  """Add a number to order the page menu item on the ministry page."""
  menuWeight: Float
  sections: [WpMinistry_Ministrydetails_MinistryPages_MinistryPageVolunteering_Sections]
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageVolunteering_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpMinistry_Ministrydetails_MinistryPages_MinistryPageVolunteering_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float

  """Numbered: Add counter on top with Image on Top"""
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String

  """
  Skips the specified number of items at the beginning of the list (newest).
  """
  skip: Float
  sorting: String
}

"""Field Group"""
type WpMinistry_Ministrydetails_MinistryPages_MinistryPageVolunteering_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

union WpMinistry_Ministrydetails_MinistryPages_MinistryPageVolunteering_Sections = WpContentSection

"""Field Group"""
type WpMinistry_Ministrydetails_ministryPagesCustom implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  menuLink: WpMinistry_Ministrydetails_ministryPagesCustom_MenuLink
  menuTitle: String
  menuType: String

  """Add a number to order the page menu item on the ministry page."""
  menuWeight: Float
  sections: [WpMinistry_Ministrydetails_ministryPagesCustom_Sections]
}

"""Field Group"""
type WpMinistry_Ministrydetails_ministryPagesCustom_MenuLink implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  menuItemCss: String
  menuItemRemoveCss: Boolean
  menuItemTarget: String

  """
  Use internal for links on the same website or app. Use external when adding a URL outside the website or app.
  """
  menuItemType: String
  menuItemUrl: String
}

union WpMinistry_Ministrydetails_ministryPagesCustom_Sections = WpContentSection

"""Connection between the ministry type and the tag type"""
type WpMinistryToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the ministry type and the TermNode type"""
type WpMinistryToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Field Group"""
type WpMinistry_Visibility implements WpAcfFieldGroup {
  """
  Public hidden page, a direct link will be needed to access. The feeds are the lists generated on the website.
  """
  feeds: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hide: Boolean
  searchEngines: Boolean
  searchResults: Boolean
}

"""Connection between the tag type and the newspost type"""
type WpTagToNewspostConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpNewspost]
}

type WpNewspost implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithContentEditor & WpNodeWithFeaturedImage & WpNodeWithExcerpt & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """Connection between the newspost type and the category type"""
  categories: WpNewspostToCategoryConnection

  """The content of the post."""
  content: String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """The excerpt of the post."""
  excerpt: String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;News Details&quot; was set to Show in GraphQL.
  """
  newsDetails: WpNewspost_Newsdetails

  """The Yoast SEO data of the newspost"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the newspost type and the tag type"""
  tags: WpNewspostToTagConnection

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """Connection between the newspost type and the TermNode type"""
  terms: WpNewspostToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpNewspost]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Connection between the newspost type and the category type"""
type WpNewspostToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpNewspost_Newsdetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  newsCampus: [WpNewspost_Newsdetails_NewsCampus]
  newsCampusId: String
  newsFooterSection: [WpNewspost_Newsdetails_NewsFooterSection]
  newsHide: WpNewspost_Newsdetails_NewsHide
}

union WpNewspost_Newsdetails_NewsCampus = WpCampus

union WpNewspost_Newsdetails_NewsFooterSection = WpContentSection

"""Field Group"""
type WpNewspost_Newsdetails_NewsHide implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  newsHideSearchEngines: Boolean
  newsHideSearchResults: Boolean
}

"""Connection between the newspost type and the tag type"""
type WpNewspostToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the newspost type and the TermNode type"""
type WpNewspostToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Connection between the tag type and the post type"""
type WpTagToPostConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpPost]
}

type WpPost implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithContentEditor & WpNodeWithAuthor & WpNodeWithFeaturedImage & WpNodeWithExcerpt & WpNodeWithComments & WpNodeWithTrackbacks & WpNodeWithRevisions & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """Connection between the NodeWithAuthor type and the User type"""
  author: WpNodeWithAuthorToUserConnectionEdge

  """The database identifier of the author of the node"""
  authorDatabaseId: Int

  """The globally unique identifier of the author of the node"""
  authorId: ID

  """Connection between the post type and the category type"""
  categories: WpPostToCategoryConnection

  """
  The number of comments. Even though WPGraphQL denotes this field as an
  integer, in WordPress this field should be saved as a numeric string for compatibility.
  """
  commentCount: Int

  """Whether the comments are open or closed for this particular post."""
  commentStatus: String

  """Connection between the post type and the Comment type"""
  comments: WpPostToCommentConnection

  """The content of the post."""
  content: String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """The excerpt of the post."""
  excerpt: String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether this page is sticky"""
  isSticky: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """Whether the pings are open or closed for this particular post."""
  pingStatus: String

  """URLs that have been pinged."""
  pinged: [String]

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Post Details&quot; was set to Show in GraphQL.
  """
  postDetails: WpPost_Postdetails

  """Connection between the post type and the postFormat type"""
  postFormats: WpPostToPostFormatConnection

  """The Yoast SEO data of the post"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the post type and the tag type"""
  tags: WpPostToTagConnection

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """Connection between the post type and the TermNode type"""
  terms: WpPostToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """URLs queued to be pinged."""
  toPing: [String]

  """List all translated versions of this post"""
  translations: [WpPost]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

interface WpNodeWithTrackbacks @isPlaceholder {
  """Whether the pings are open or closed for this particular post."""
  pingStatus: String

  """URLs that have been pinged."""
  pinged: [String]

  """URLs queued to be pinged."""
  toPing: [String]
}

"""Connection between the post type and the category type"""
type WpPostToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Connection between the post type and the Comment type"""
type WpPostToCommentConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpComment]
}

"""Field Group"""
type WpPost_Postdetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  postAuthor: [WpPost_Postdetails_PostAuthor]
  postCampus: [WpPost_Postdetails_PostCampus]
  postCampusId: String

  """Add extra sections after the main content."""
  postFooterSection: [WpPost_Postdetails_PostFooterSection]
  postHide: WpPost_Postdetails_PostHide
}

union WpPost_Postdetails_PostAuthor = WpSpeaker

union WpPost_Postdetails_PostCampus = WpCampus

union WpPost_Postdetails_PostFooterSection = WpContentSection

"""Field Group"""
type WpPost_Postdetails_PostHide implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  postHideSearchEngines: Boolean
  postHideSearchResults: Boolean
}

"""Connection between the post type and the postFormat type"""
type WpPostToPostFormatConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpPostFormat]
}

"""The postFormat type"""
type WpPostFormat implements Node & WpNode & WpTermNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier @dontInfer {
  """Connection between the postFormat type and the ContentNode type"""
  contentNodes: WpPostFormatToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The link to the term"""
  link: String

  """The human friendly name of the object."""
  name: String

  """Connection between the postFormat type and the post type"""
  posts: WpPostFormatToPostConnection

  """The Yoast SEO data of the Formats taxonomy."""
  seo: WpTaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the postFormat type and the Taxonomy type"""
  taxonomy: WpPostFormatToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Connection between the postFormat type and the ContentNode type"""
type WpPostFormatToContentNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpContentNode]
}

"""Connection between the postFormat type and the post type"""
type WpPostFormatToPostConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpPost]
}

type WpTaxonomySEO {
  breadcrumbs: [WpSEOPostTypeBreadcrumbs]
  canonical: String
  cornerstone: Boolean
  focuskw: String
  fullHead: String
  metaDesc: String
  metaKeywords: String
  metaRobotsNofollow: String
  metaRobotsNoindex: String
  opengraphAuthor: String
  opengraphDescription: String
  opengraphImage: WpMediaItem
  opengraphModifiedTime: String
  opengraphPublishedTime: String
  opengraphPublisher: String
  opengraphSiteName: String
  opengraphTitle: String
  opengraphType: String
  opengraphUrl: String
  schema: WpSEOTaxonomySchema
  title: String
  twitterDescription: String
  twitterImage: WpMediaItem
  twitterTitle: String
}

"""The Schema types for Taxonomy"""
type WpSEOTaxonomySchema {
  raw: String
}

"""Connection between the postFormat type and the Taxonomy type"""
type WpPostFormatToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpTaxonomy
}

"""Connection between the post type and the tag type"""
type WpPostToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the post type and the TermNode type"""
type WpPostToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Connection between the tag type and the Serie type"""
type WpTagToSerieConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpSerie]
}

"""The Serie type"""
type WpSerie implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithExcerpt & WpMenuItemLinkable @dontInfer {
  """Connection between the Serie type and the category type"""
  categories: WpSerieToCategoryConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """The excerpt of the post."""
  excerpt: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The Yoast SEO data of the Serie"""
  seo: WpPostTypeSEO

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Series Details&quot; was set to Show in GraphQL.
  """
  seriesDetails: WpSerie_Seriesdetails

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Series Graphics&quot; was set to Show in GraphQL.
  """
  seriesGraphics: WpSerie_Seriesgraphics

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the Serie type and the tag type"""
  tags: WpSerieToTagConnection

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the Serie type and the TermNode type"""
  terms: WpSerieToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpSerie]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Connection between the Serie type and the category type"""
type WpSerieToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpSerie_Seriesdetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  seriesHide: WpSerie_Seriesdetails_SeriesHide
  seriesResources: [WpSerie_Seriesdetails_SeriesResources]

  """Check to organize videos on series view by seasons"""
  seriesSeasonsActive: Boolean

  """Add extra sections after the main series section."""
  seriesSections: [WpSerie_Seriesdetails_SeriesSections]

  """Please use .m3u8 urls"""
  seriesTrailer: String

  """16:9"""
  seriesTrailerPoster: WpMediaItem
}

"""Field Group"""
type WpSerie_Seriesdetails_SeriesHide implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  seriesHideSearchEngines: Boolean
  seriesHideSearchResults: Boolean
}

union WpSerie_Seriesdetails_SeriesResources = WpPost | WpLinkitem

union WpSerie_Seriesdetails_SeriesSections = WpContentSection

"""Field Group"""
type WpSerie_Seriesgraphics implements WpAcfFieldGroup {
  """
  16:9 graphic: Used for hero sections and others visually appealing spaces.
  Don&#039;t use graphics with text. Don&#039;t include the series logo.
  """
  background: WpMediaItem

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  16:9 graphic with transparency: Logo of the series. It will show on the Hero.
  """
  logo: WpMediaItem

  """9:16 graphic, vertical graphic"""
  poster: WpMediaItem
}

"""Connection between the Serie type and the tag type"""
type WpSerieToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the Serie type and the TermNode type"""
type WpSerieToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Connection between the tag type and the Taxonomy type"""
type WpTagToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpTaxonomy
}

"""Connection between the tag type and the videoOnDemand type"""
type WpTagToVideoOnDemandConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpVideoOnDemand]
}

"""The videoOnDemand type"""
type WpVideoOnDemand implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithContentEditor & WpNodeWithFeaturedImage & WpNodeWithExcerpt & WpNodeWithRevisions & WpMenuItemLinkable @dontInfer {
  """Connection between the videoOnDemand type and the category type"""
  categories: WpVideoOnDemandToCategoryConnection

  """The content of the post."""
  content: String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """The excerpt of the post."""
  excerpt: String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Participation&quot; was set to Show in GraphQL.
  """
  participation: WpVideoOnDemand_Participation

  """The Yoast SEO data of the videoOnDemand"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the videoOnDemand type and the tag type"""
  tags: WpVideoOnDemandToTagConnection

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """Connection between the videoOnDemand type and the TermNode type"""
  terms: WpVideoOnDemandToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpVideoOnDemand]

  """The unique resource identifier path"""
  uri: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Video Details&quot; was set to Show in GraphQL.
  """
  videoDetails: WpVideoOnDemand_Videodetails
  nodeType: String
}

"""Connection between the videoOnDemand type and the category type"""
type WpVideoOnDemandToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpVideoOnDemand_Participation implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  participationRaisehand: WpVideoOnDemand_Participation_ParticipationRaisehand
}

"""Field Group"""
type WpVideoOnDemand_Participation_ParticipationRaisehand implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  When Custom Links have been added to the Site Settings, it&#039;s possible to
  add to the list or replace it entirely on a campus or message basis.
  """
  participationRaisehandBehavior: String
  participationRaisehandCustom: [WpVideoOnDemand_Participation_ParticipationRaisehand_participationRaisehandCustom]
}

"""Field Group"""
type WpVideoOnDemand_Participation_ParticipationRaisehand_participationRaisehandCustom implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Add CSS class names separated by a space (Eg. &#039;my-class-one my-class-two)
  """
  participationRaisehandCustomClass: String
  participationRaisehandCustomIcon: WpMediaItem
  participationRaisehandCustomTarget: String
  participationRaisehandCustomTitle: String
  participationRaisehandCustomType: String
  participationRaisehandCustomUrl: String
}

"""Connection between the videoOnDemand type and the tag type"""
type WpVideoOnDemandToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the videoOnDemand type and the TermNode type"""
type WpVideoOnDemandToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Field Group"""
type WpVideoOnDemand_Videodetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  videoAttachments: [WpVideoOnDemand_Videodetails_VideoAttachments]
  videoBible: WpVideoOnDemand_Videodetails_VideoBible
  videoCampus: [WpVideoOnDemand_Videodetails_VideoCampus]
  videoCampusId: String

  """The date the video was recorded."""
  videoDayDate: String
  videoHide: WpVideoOnDemand_Videodetails_VideoHide

  """Used as a shorter excerpt for the video. Limited characters."""
  videoOneLiner: String
  videoResources: [WpVideoOnDemand_Videodetails_VideoResources]

  """
  Select a Season for group by it. Seasons must be activated on the corresponding Serie page.
  """
  videoSeason: WpVideoOnDemand_Videodetails_VideoSeason

  """Add extra sections after the main video content."""
  videoSections: [WpVideoOnDemand_Videodetails_VideoSections]
  videoSerieId: String
  videoSeries: WpVideoOnDemand_Videodetails_VideoSeries

  """
  Create new speakers by visiting the &lt;a
  href=&#039;/wp/wp-admin/edit.php?post_type=speaker&#039;
  target=&#039;_blank&#039; title=&#039;Visit People on a new
  tab&#039;&gt;People&lt;/a&gt; menu entry.
  """
  videoSpeaker: [WpVideoOnDemand_Videodetails_VideoSpeaker]
  videoSpeakerId: String

  """
  Please use .m3u8 files for adaptive streaming (quality adapts to user device and internet connection)
  """
  videoTrailer: String

  """Video&#039;s audio into text transcription."""
  videoTranscript: String

  """
  Please use .m3u8 files for adaptive streaming (quality adapts to user device and internet connection)
  """
  videoUrl: String
}

union WpVideoOnDemand_Videodetails_VideoAttachments = WpDocument

"""Field Group"""
type WpVideoOnDemand_Videodetails_VideoBible implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  videoBibleActive: Boolean

  """
  Visit https://chop.bible.com/bible, select the desired Bible book, chapter and
  version. Copy and paste the URL resulting here.
  """
  videoBibleUrl: String
}

union WpVideoOnDemand_Videodetails_VideoCampus = WpCampus

"""Field Group"""
type WpVideoOnDemand_Videodetails_VideoHide implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  videoHideSearchEngines: Boolean
  videoHideSearchResults: Boolean
}

union WpVideoOnDemand_Videodetails_VideoResources = WpPost | WpLinkitem

union WpVideoOnDemand_Videodetails_VideoSeason = WpSeason

union WpVideoOnDemand_Videodetails_VideoSections = WpContentSection

union WpVideoOnDemand_Videodetails_VideoSeries = WpSerie

union WpVideoOnDemand_Videodetails_VideoSpeaker = WpSpeaker

"""Connection between the tag type and the volunteeropportunity type"""
type WpTagToVolunteeropportunityConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpVolunteeropportunity]
}

"""The volunteeropportunity type"""
type WpVolunteeropportunity implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithRevisions & WpHierarchicalContentNode & WpMenuItemLinkable @dontInfer {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """Connection between the volunteeropportunity type and the category type"""
  categories: WpVolunteeropportunityToCategoryConnection

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;General&quot; was set to Show in GraphQL.
  """
  general: WpVolunteeropportunity_General

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Content&quot; was set to Show in GraphQL.
  """
  postContent: WpVolunteeropportunity_Postcontent

  """The Yoast SEO data of the volunteeropportunity"""
  seo: WpPostTypeSEO

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Serve Details&quot; was set to Show in GraphQL.
  """
  serveDetails: WpVolunteeropportunity_Servedetails

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """Connection between the volunteeropportunity type and the tag type"""
  tags: WpVolunteeropportunityToTagConnection

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the volunteeropportunity type and the TermNode type"""
  terms: WpVolunteeropportunityToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """The unique resource identifier path"""
  uri: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Visibility&quot; was set to Show in GraphQL.
  """
  visibility: WpVolunteeropportunity_Visibility
  nodeType: String
}

"""Connection between the volunteeropportunity type and the category type"""
type WpVolunteeropportunityToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpVolunteeropportunity_General implements WpAcfFieldGroup {
  campus: [WpVolunteeropportunity_General_Campus]
  campusId: String
  featuredPhoto: WpMediaItem

  """The name of the ACF Field Group"""
  fieldGroupName: String
  summary: String
}

union WpVolunteeropportunity_General_Campus = WpCampus

"""Field Group"""
type WpVolunteeropportunity_Postcontent implements WpAcfFieldGroup {
  content: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpVolunteeropportunity_Servedetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  volunteerRelatedMinistry: [WpVolunteeropportunity_Servedetails_VolunteerRelatedMinistry]
}

union WpVolunteeropportunity_Servedetails_VolunteerRelatedMinistry = WpMinistry

"""Connection between the volunteeropportunity type and the tag type"""
type WpVolunteeropportunityToTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTag]
}

"""Connection between the volunteeropportunity type and the TermNode type"""
type WpVolunteeropportunityToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Field Group"""
type WpVolunteeropportunity_Visibility implements WpAcfFieldGroup {
  """
  Public hidden page, a direct link will be needed to access. The feeds are the lists generated on the website.
  """
  feeds: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hide: Boolean
  searchEngines: Boolean
  searchResults: Boolean
}

"""Connection between the course type and the TermNode type"""
type WpCourseToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Field Group"""
type WpCourse_Visibility implements WpAcfFieldGroup {
  """
  Public hidden page, a direct link will be needed to access. The feeds are the lists generated on the website.
  """
  feeds: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hide: Boolean
  searchEngines: Boolean
  searchResults: Boolean
}

"""Connection between the category type and the event type"""
type WpCategoryToEventConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpEvent]
}

"""Connection between the category type and the groupType type"""
type WpCategoryToGroupTypeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpGroupType]
}

"""Connection between the category type and the group type"""
type WpCategoryToGroupConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpGroup]
}

"""Connection between the category type and the lesson type"""
type WpCategoryToLessonConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpLesson]
}

"""Connection between the category type and the ministry type"""
type WpCategoryToMinistryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpMinistry]
}

"""Connection between the category type and the newspost type"""
type WpCategoryToNewspostConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpNewspost]
}

"""Connection between the category type and the page type"""
type WpCategoryToPageConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpPage]
}

"""Connection between the category type and the category type"""
type WpCategoryToParentCategoryConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpCategory
}

"""Connection between the category type and the post type"""
type WpCategoryToPostConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpPost]
}

"""Connection between the category type and the Serie type"""
type WpCategoryToSerieConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpSerie]
}

"""Connection between the category type and the speaker type"""
type WpCategoryToSpeakerConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpSpeaker]
}

type WpSpeaker implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithFeaturedImage & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """Connection between the speaker type and the category type"""
  categories: WpSpeakerToCategoryConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;General&quot; was set to Show in GraphQL.
  """
  general: WpSpeaker_General

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Person Details&quot; was set to Show in GraphQL.
  """
  personDetails: WpSpeaker_Persondetails

  """The Yoast SEO data of the speaker"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """Connection between the speaker type and the TermNode type"""
  terms: WpSpeakerToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpSpeaker]

  """The unique resource identifier path"""
  uri: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Visibility&quot; was set to Show in GraphQL.
  """
  visibility: WpSpeaker_Visibility
  nodeType: String
}

"""Connection between the speaker type and the category type"""
type WpSpeakerToCategoryConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpCategory]
}

"""Field Group"""
type WpSpeaker_General implements WpAcfFieldGroup {
  campus: [WpSpeaker_General_Campus]
  campusId: String
  featuredPhoto: WpMediaItem

  """The name of the ACF Field Group"""
  fieldGroupName: String
  summary: String
}

union WpSpeaker_General_Campus = WpCampus

"""Field Group"""
type WpSpeaker_Persondetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  personEmail: String
  personPosition: String
}

"""Connection between the speaker type and the TermNode type"""
type WpSpeakerToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Field Group"""
type WpSpeaker_Visibility implements WpAcfFieldGroup {
  """
  Public hidden page, a direct link will be needed to access. The feeds are the lists generated on the website.
  """
  feeds: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hide: Boolean
  searchEngines: Boolean
  searchResults: Boolean
}

"""Connection between the category type and the Taxonomy type"""
type WpCategoryToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpTaxonomy
}

"""Connection between the category type and the videoOnDemand type"""
type WpCategoryToVideoOnDemandConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpVideoOnDemand]
}

"""Connection between the category type and the volunteeropportunity type"""
type WpCategoryToVolunteeropportunityConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpVolunteeropportunity]
}

"""Connection between the page type and the Comment type"""
type WpPageToCommentConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpComment]
}

"""Field Group"""
type WpPage_Pagedetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Select campus when the page will be a part of a campus. Ex. /campus/hamiltonmill/newpage
  """
  pageCampus: [WpPage_Pagedetails_PageCampus]
  pageCampusId: String
  pageHide: WpPage_Pagedetails_PageHide

  """When activated, it will hide all the content on the Editor above"""
  pageHideContent: Boolean
  pageHideShare: Boolean
  pageMenues: WpPage_Pagedetails_PageMenues
  pageSections: [WpPage_Pagedetails_PageSections]
}

union WpPage_Pagedetails_PageCampus = WpCampus

"""Field Group"""
type WpPage_Pagedetails_PageHide implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageHideSearchEngines: Boolean
  pageHideSearchResults: Boolean
}

union WpPage_Pagedetails_PageMenues = WpCustomMenu

union WpPage_Pagedetails_PageSections = WpContentSection

"""Connection between the page type and the TermNode type"""
type WpPageToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Connection between the User type and the post type"""
type WpUserToPostConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpPost]
}

"""Connection between the User type and the UserRole type"""
type WpUserToUserRoleConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpUserRole]
}

"""A user role object"""
type WpUserRole implements Node & WpNode @dontInfer {
  """The capabilities that belong to this role"""
  capabilities: [String]

  """The display name of the role"""
  displayName: String

  """The registered name of the role"""
  name: String
  nodeType: String
}

type WpSEOUser {
  breadcrumbTitle: String
  canonical: String
  fullHead: String
  language: String
  metaDesc: String
  metaRobotsNofollow: String
  metaRobotsNoindex: String
  opengraphDescription: String
  opengraphImage: WpMediaItem
  opengraphTitle: String
  region: String
  schema: WpSEOUserSchema
  social: WpSEOUserSocial
  title: String
  twitterDescription: String
  twitterImage: WpMediaItem
  twitterTitle: String
}

"""The Schema types for User"""
type WpSEOUserSchema {
  articleType: [String]
  pageType: [String]
  raw: String
}

type WpSEOUserSocial {
  facebook: String
  instagram: String
  linkedIn: String
  mySpace: String
  pinterest: String
  soundCloud: String
  twitter: String
  wikipedia: String
  youTube: String
}

"""The Schema for post type"""
type WpSEOPageInfoSchema {
  raw: String
}

"""Connection between the ContentNode type and the User type"""
type WpContentNodeToEditLockConnectionEdge {
  """The timestamp for when the node was last edited"""
  lockTimestamp: String

  """The node of the connection, without the edges"""
  node: WpUser
}

"""Connection between the NodeWithRevisions type and the ContentNode type"""
type WpNodeWithRevisionsToContentNodeConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpContentNode
}

type WpCampus implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithFeaturedImage & WpNodeWithExcerpt & WpNodeWithRevisions & WpHierarchicalContentNode & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """
  Returns ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpHierarchicalContentNodeToContentNodeAncestorsConnection

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Campus Details&quot; was set to Show in GraphQL.
  """
  campusDetails: WpCampus_Campusdetails

  """
  Connection between the HierarchicalContentNode type and the ContentNode type
  """
  wpChildren: WpHierarchicalContentNodeToContentNodeChildrenConnection

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """The excerpt of the post."""
  excerpt: String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The parent of the node. The parent object can be of various types"""
  wpParent: WpHierarchicalContentNodeToParentContentNodeConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Participation&quot; was set to Show in GraphQL.
  """
  participation: WpCampus_Participation

  """The Yoast SEO data of the campus"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """Connection between the campus type and the TermNode type"""
  terms: WpCampusToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpCampus]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpCampus_Campusdetails implements WpAcfFieldGroup {
  campusBrand: WpCampus_Campusdetails_CampusBrand
  campusConfiguration: WpCampus_Campusdetails_CampusConfiguration
  campusDonations: WpCampus_Campusdetails_CampusDonations
  campusMapLocation: WpACF_GoogleMap

  """
  The Newsletter allows to have on the Global Menu the subscription widget
  """
  campusNewsletter: WpCampus_Campusdetails_CampusNewsletter
  campusPages: WpCampus_Campusdetails_CampusPages
  campusSelector: WpCampus_Campusdetails_CampusSelector
  campusSocial: WpCampus_Campusdetails_CampusSocial

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpCampus_Campusdetails_CampusBrand implements WpAcfFieldGroup {
  campusBrandLogo: WpMediaItem
  campusBrandOverwrite: Boolean
  campusBrandUrl: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpCampus_Campusdetails_CampusConfiguration implements WpAcfFieldGroup {
  """Default: True. Show or Hide the campus on the campus selector."""
  campusConfigurationVisibility: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpCampus_Campusdetails_CampusDonations implements WpAcfFieldGroup {
  campusDonationUrl: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Google Map field"""
type WpACF_GoogleMap {
  """The city associated with the map"""
  city: String

  """The country associated with the map"""
  country: String

  """The country abbreviation associated with the map"""
  countryShort: String

  """The latitude associated with the map"""
  latitude: Float

  """The longitude associated with the map"""
  longitude: Float

  """The country associated with the map"""
  placeId: String

  """The post code associated with the map"""
  postCode: String

  """The state associated with the map"""
  state: String

  """The state abbreviation associated with the map"""
  stateShort: String

  """The street address associated with the map"""
  streetAddress: String

  """The street name associated with the map"""
  streetName: String

  """The street number associated with the map"""
  streetNumber: String

  """The zoom defined with the map"""
  zoom: String
}

"""Field Group"""
type WpCampus_Campusdetails_CampusNewsletter implements WpAcfFieldGroup {
  campusNewsletterProvider: String
  campusNewsletterUrl: String

  """
  If activated, the Newsletter URL from the Settings page will be used instead
  """
  campusSubscriptionOverwrite: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpCampus_Campusdetails_CampusPages implements WpAcfFieldGroup {
  campusAttachments: WpCampus_Campusdetails_CampusPages_CampusAttachments
  campusBlog: WpCampus_Campusdetails_CampusPages_CampusBlog
  campusCourses: WpCampus_Campusdetails_CampusPages_CampusCourses
  campusEvents: WpCampus_Campusdetails_CampusPages_CampusEvents
  campusGroups: WpCampus_Campusdetails_CampusPages_CampusGroups
  campusMinistry: WpCampus_Campusdetails_CampusPages_CampusMinistry
  campusNews: WpCampus_Campusdetails_CampusPages_CampusNews
  campusVolunteering: WpCampus_Campusdetails_CampusPages_CampusVolunteering
  campusWatch: WpCampus_Campusdetails_CampusPages_CampusWatch

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpCampus_Campusdetails_CampusPages_CampusAttachments implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageActive: Boolean
}

"""Field Group"""
type WpCampus_Campusdetails_CampusPages_CampusBlog implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageActive: Boolean

  """This will show on the blog page (Eg.: yoursite.com/campus/blog)"""
  pageSections: [WpCampus_Campusdetails_CampusPages_CampusBlog_PageSections]
}

union WpCampus_Campusdetails_CampusPages_CampusBlog_PageSections = WpContentSection

"""Field Group"""
type WpCampus_Campusdetails_CampusPages_CampusCourses implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageActive: Boolean
  pageSections: [WpCampus_Campusdetails_CampusPages_CampusCourses_PageSections]
}

union WpCampus_Campusdetails_CampusPages_CampusCourses_PageSections = WpContentSection

"""Field Group"""
type WpCampus_Campusdetails_CampusPages_CampusEvents implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageActive: Boolean
  pageSections: [WpCampus_Campusdetails_CampusPages_CampusEvents_PageSections]
}

union WpCampus_Campusdetails_CampusPages_CampusEvents_PageSections = WpContentSection

"""Field Group"""
type WpCampus_Campusdetails_CampusPages_CampusGroups implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageActive: Boolean
  pageSections: [WpCampus_Campusdetails_CampusPages_CampusGroups_PageSections]
}

union WpCampus_Campusdetails_CampusPages_CampusGroups_PageSections = WpContentSection

"""Field Group"""
type WpCampus_Campusdetails_CampusPages_CampusMinistry implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageActive: Boolean
  pageSections: [WpCampus_Campusdetails_CampusPages_CampusMinistry_PageSections]
}

union WpCampus_Campusdetails_CampusPages_CampusMinistry_PageSections = WpContentSection

"""Field Group"""
type WpCampus_Campusdetails_CampusPages_CampusNews implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageActive: Boolean
  pageSections: [WpCampus_Campusdetails_CampusPages_CampusNews_PageSections]
}

union WpCampus_Campusdetails_CampusPages_CampusNews_PageSections = WpContentSection

"""Field Group"""
type WpCampus_Campusdetails_CampusPages_CampusVolunteering implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageActive: Boolean
  pageSections: [WpCampus_Campusdetails_CampusPages_CampusVolunteering_PageSections]
}

union WpCampus_Campusdetails_CampusPages_CampusVolunteering_PageSections = WpContentSection

"""Field Group"""
type WpCampus_Campusdetails_CampusPages_CampusWatch implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageActive: Boolean
  pageSections: [WpCampus_Campusdetails_CampusPages_CampusWatch_PageSections]
}

union WpCampus_Campusdetails_CampusPages_CampusWatch_PageSections = WpContentSection

"""Field Group"""
type WpCampus_Campusdetails_CampusSelector implements WpAcfFieldGroup {
  """
  Overwrite default campus URL with alternative URL. Used when an option is selected on the Campus Selector.
  """
  campusSelectorHome: WpCampus_Campusdetails_CampusSelector_CampusSelectorHome

  """Overwrite default behavior"""
  campusSelectorOverwrite: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpCampus_Campusdetails_CampusSelector_CampusSelectorHome implements WpAcfFieldGroup {
  campusHomeTarget: String

  """
  Use internal for links on the same website. Use external when adding a URL outside the website or app.
  """
  campusHomeType: String

  """
  For Internal link don&#039;t use the full URL, instead use something like &quot;/my-page&quot;.
  """
  campusHomeUrl: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpCampus_Campusdetails_CampusSocial implements WpAcfFieldGroup {
  campusSocialFacebookUrl: String
  campusSocialInstagramUrl: String

  """
  If activated, the social links from the Settings page will be used instead
  """
  campusSocialOverwrite: Boolean
  campusSocialTwitterUrl: String
  campusSocialYoutubeUrl: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpCampus_Participation implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  participationRaisehand: WpCampus_Participation_ParticipationRaisehand
}

"""Field Group"""
type WpCampus_Participation_ParticipationRaisehand implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  When Custom Links have been added to the Site Settings, it&#039;s possible to
  add to the list or replace it entirely on a campus or message basis.
  """
  participationRaisehandBehavior: String
  participationRaisehandCustom: [WpCampus_Participation_ParticipationRaisehand_participationRaisehandCustom]
}

"""Field Group"""
type WpCampus_Participation_ParticipationRaisehand_participationRaisehandCustom implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Add CSS class names separated by a space (Eg. &#039;my-class-one my-class-two)
  """
  participationRaisehandCustomClass: String
  participationRaisehandCustomIcon: WpMediaItem
  participationRaisehandCustomTarget: String
  participationRaisehandCustomTitle: String
  participationRaisehandCustomType: String
  participationRaisehandCustomUrl: String
}

"""Connection between the campus type and the TermNode type"""
type WpCampusToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

type WpContentSection implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Global Section Details&quot; was set to Show in GraphQL.
  """
  sectionDetails: WpContentSection_Sectiondetails

  """The Yoast SEO data of the contentSection"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the contentSection type and the TermNode type"""
  terms: WpContentSectionToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpContentSection]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpContentSection_Sectiondetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionAccordion: WpContentSection_Sectiondetails_SectionAccordion
  sectionAlbum: WpContentSection_Sectiondetails_SectionAlbum
  sectionBlurbs: WpContentSection_Sectiondetails_SectionBlurbs
  sectionCarousel: WpContentSection_Sectiondetails_SectionCarousel
  sectionConfiguration: WpContentSection_Sectiondetails_SectionConfiguration

  """
  Section&#039;s content positioned below the title. Location and styling may vary depending on section type.
  """
  sectionContent: String
  sectionCta: WpContentSection_Sectiondetails_SectionCta
  sectionFollow: WpContentSection_Sectiondetails_SectionFollow
  sectionForm: WpContentSection_Sectiondetails_SectionForm
  sectionHero: WpContentSection_Sectiondetails_SectionHero
  sectionIframe: WpContentSection_Sectiondetails_SectionIframe
  sectionPagemenu: WpContentSection_Sectiondetails_SectionPagemenu
  sectionPodcast: WpContentSection_Sectiondetails_SectionPodcast
  sectionQrcode: WpContentSection_Sectiondetails_SectionQrcode
  sectionShare: WpContentSection_Sectiondetails_SectionShare
  sectionTabs: WpContentSection_Sectiondetails_SectionTabs
  sectionText: WpContentSection_Sectiondetails_SectionText

  """
  Text for section &#039;Heading&#039; element (E.g. &#039;Featured
  Messages&#039;).  Location and styling may vary depending on section type.
  """
  sectionTitle: String

  """Type of Component"""
  sectionType: String
  sectionVideo: WpContentSection_Sectiondetails_SectionVideo
  sectionVodSeries: WpContentSection_Sectiondetails_SectionVodSeries

  """Select a tag to show the related tagged videos"""
  sectionVodTags: WpContentSection_Sectiondetails_SectionVodTags
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAccordion implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionAccordionConfiguration: WpContentSection_Sectiondetails_SectionAccordion_SectionAccordionConfiguration
  sectionAccordionItem: [WpContentSection_Sectiondetails_SectionAccordion_sectionAccordionItem]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAccordion_SectionAccordionConfiguration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """The container wraps all the items."""
  sectionAccordionConfigurationAccordionClass: String

  """
  It will add the class to each item. Useful for global styling on the current accordion.
  """
  sectionAccordionConfigurationClass: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAccordion_sectionAccordionItem implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemContent: String
  itemCss: String
  itemCssRemoveDefault: Boolean
  itemTitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionAlbumConfiguration: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration
  sectionAlbumItems: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  When a button is created and stretched on, the component will be clickable but the button will remain hidden.
  """
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean
  sectionCarouselConfigurationAutoplay: Boolean

  """
  Interval in milliseconds to automatically go to the next item when autoPlay is true, defaults to 3000.
  """
  sectionCarouselConfigurationAutoplayInterval: Float

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  sectionCarouselConfigurationBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  sectionCarouselConfigurationBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  sectionCarouselConfigurationClass: String

  """Show dots under the items."""
  sectionCarouselConfigurationDots: Boolean

  """Use this to style the dot list."""
  sectionCarouselConfigurationDotsClass: String

  """For desktop."""
  sectionCarouselConfigurationDraggable: Boolean

  """Gap between each item on the carousel."""
  sectionCarouselConfigurationGap: String

  """
  Each item will grow vertically, consuming the remaining vertical space; all the items will have equal height.
  """
  sectionCarouselConfigurationGrow: Boolean
  sectionCarouselConfigurationImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  sectionCarouselConfigurationImageFit: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-position&#039; target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  sectionCarouselConfigurationImagePosition: String
  sectionCarouselConfigurationInfinite: Boolean
  sectionCarouselConfigurationItemType: String
  sectionCarouselConfigurationPartiallyVisible: Boolean
  sectionCarouselConfigurationResponsive: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive

  """
  It makes the first button link stretched to the whole container, making the
  full element clickable. Read more on
  https://getbootstrap.com/docs/4.4/utilities/stretched-link/
  """
  sectionCarouselConfigurationStretched: Boolean

  """For mobile."""
  sectionCarouselConfigurationSwipe: Boolean
  sectionCarouselConfigurationTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  sectionCarouselConfigurationTruncateLines: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveL: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive_ResponsiveL
  responsiveS: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive_ResponsiveS
  responsiveXl: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive_ResponsiveXl
  responsiveXs: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive_ResponsiveXs
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive_ResponsiveL implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveLCustom: Boolean
  responsiveLItems: Float
  responsiveLMax: Float
  responsiveLMin: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive_ResponsiveS implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveSCustom: Boolean
  responsiveSItems: Float
  responsiveSMax: Float
  responsiveSMin: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive_ResponsiveXl implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveXlCustom: Boolean
  responsiveXlItems: Float
  responsiveXlMax: Float
  responsiveXlMin: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumConfiguration_SectionCarouselConfigurationResponsive_ResponsiveXs implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveXsCustom: Boolean
  responsiveXsItems: Float
  responsiveXsMax: Float
  responsiveXsMin: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems implements WpAcfFieldGroup {
  album: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_Album
  availableon: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_Availableon

  """The name of the ACF Field Group"""
  fieldGroupName: String
  song: [WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_Album implements WpAcfFieldGroup {
  albumCover: WpMediaItem
  albumSubtitle: String
  albumTitle: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_Availableon implements WpAcfFieldGroup {
  availableonAmazon: String
  availableonApple: String
  availableonDeezer: String
  availableonPandora: String
  availableonSpotify: String
  availableonTidal: String

  """Reorganize this list to alter the list order."""
  availableonType: [String]

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  songAuthor: String
  songDuration: String
  songResources: [WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song_songResources]
  songTitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song_songResources implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemButtons: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song_songResources_ItemButtons
  itemContent: String
  itemCss: String
  itemCssRemoveDefault: Boolean
  itemImage: WpMediaItem
  itemSubtitle: String
  itemTitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song_songResources_ItemButtons implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemButtonsButton: [WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song_songResources_ItemButtons_itemButtonsButton]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song_songResources_ItemButtons_itemButtonsButton implements WpAcfFieldGroup {
  buttonCss: String

  """
  It remove any default classes added by the website to allow you full control
  """
  buttonCssRemoveDefault: Boolean
  buttonLink: String
  buttonModal: WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song_songResources_ItemButtons_itemButtonsButton_ButtonModal
  buttonTarget: String
  buttonText: String
  buttonType: String
  buttonUrl: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionAlbum_SectionAlbumItems_song_songResources_ItemButtons_itemButtonsButton_ButtonModal implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Removes padding and heading. The internal content will fill the modal container.
  """
  modalFrameless: Boolean

  """Defaults to automatic/adaptive"""
  modalHeight: Float
  modalHtml: String
  modalTitle: String

  """Makes the container background transparent."""
  modalTransparent: Boolean
  modalVideoUrl: String

  """Defaults to max. 800px"""
  modalWidth: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionBlurbsConfiguration: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsConfiguration
  sectionBlurbsFeed: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed
  sectionBlurbsItems: [WpContentSection_Sectiondetails_SectionBlurbs_sectionBlurbsItems]

  """
  &#039;Feed&#039; will auto-load the latest items from videos, posts, events, or news. 
  &#039;Custom&#039; will allow you to fully customize each element.
  """
  sectionBlurbsType: String
  sectionNfs: WpContentSection_Sectiondetails_SectionBlurbs_SectionNfs
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsConfiguration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  When a button is created and stretched on, the component will be clickable but the button will remain hidden.
  """
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  sectionBlurbsConfigurationBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  sectionBlurbsConfigurationBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  sectionBlurbsConfigurationClass: String

  """
  Defines how the items are placed in the container defining if they go
  horizontally (row) or vertically (column) and the direction (normal or
  reversed).&lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction&#039;&gt;Read
  MDN docs&lt;/a&gt;.
  """
  sectionBlurbsConfigurationDirection: String

  """Gap between each item on the item list."""
  sectionBlurbsConfigurationGap: String

  """
  Each item will grow vertically, consuming the remaining vertical space; all the items will have equal height.
  """
  sectionBlurbsConfigurationGrow: Boolean
  sectionBlurbsConfigurationImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  sectionBlurbsConfigurationImageFit: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-position&#039; target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  sectionBlurbsConfigurationImagePosition: String

  """
  ⚬ Space Between: Distribute items evenly The first item is flush with the
  start, the last is flush with the end.&lt;br/&gt;
  ⚬ Space Around: Distribute items evenly Items have a half-size space on either end.&lt;br/&gt;
  ⚬ Space Evenly: Distribute items evenly Items have equal space around them.&lt;br/&gt;
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content&#039;&gt;Read the MDN docs&lt;/a&gt;.
  """
  sectionBlurbsConfigurationJustification: String
  sectionBlurbsConfigurationOrientation: String

  """
  Determines how items are laid out horizontally. If active, it will try to fill up the whole row with the items.
  """
  sectionBlurbsConfigurationStretchedBlurb: Boolean

  """
  It makes the first button link stretched to the whole container, making the
  full element clickable. Read more on &lt;a
  href=&quot;https://getbootstrap.com/docs/4.4/utilities/stretched-link/&quot; target=&quot;_blank&quot;&gt;https://getbootstrap.com/docs/4.4/utilities/stretched-link/&lt;/a&gt;
  """
  sectionBlurbsConfigurationStretchedLink: Boolean
  sectionBlurbsConfigurationTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  sectionBlurbsConfigurationTruncateLines: Float
  sectionBlurbsConfigurationType: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed implements WpAcfFieldGroup {
  """
  It affects the button of each blurb on the carousel. Combine with the carousel configuration for more display options.
  """
  buttonBehavior: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_ButtonBehavior
  feedCourses: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedCourses
  feedEvents: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedEvents
  feedGroups: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedGroups
  feedGrouptypes: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedGrouptypes
  feedLessons: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedLessons

  """Defines how many items will be shown."""
  feedLimit: Float
  feedMinistries: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedMinistries
  feedNews: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedNews
  feedPosts: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedPosts
  feedSeries: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedSeries

  """Skip items on the list."""
  feedSkip: Float
  feedType: String
  feedVideos: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedVideos
  feedVolunteering: WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedVolunteering

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedCourses implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedCoursesCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedEvents implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedEventsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedGroups implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedGroupsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedGrouptypes implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedGrouptypesCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedLessons implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedLessonsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedMinistries implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedMinistriesCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedNews implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedNewsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedPosts implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedPostsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedSeries implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedSeriesCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedVideos implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedVideosCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionBlurbsFeed_FeedVolunteering implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedVolunteeringCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_sectionBlurbsItems implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemButtons: WpContentSection_Sectiondetails_SectionBlurbs_sectionBlurbsItems_ItemButtons
  itemContent: String
  itemCss: String
  itemCssRemoveDefault: Boolean
  itemImage: WpMediaItem
  itemSubtitle: String
  itemTitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_sectionBlurbsItems_ItemButtons implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemButtonsButton: [WpContentSection_Sectiondetails_SectionBlurbs_sectionBlurbsItems_ItemButtons_itemButtonsButton]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_sectionBlurbsItems_ItemButtons_itemButtonsButton implements WpAcfFieldGroup {
  buttonCss: String

  """
  It remove any default classes added by the website to allow you full control
  """
  buttonCssRemoveDefault: Boolean
  buttonLink: String
  buttonModal: WpContentSection_Sectiondetails_SectionBlurbs_sectionBlurbsItems_ItemButtons_itemButtonsButton_ButtonModal
  buttonTarget: String
  buttonText: String
  buttonType: String
  buttonUrl: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_sectionBlurbsItems_ItemButtons_itemButtonsButton_ButtonModal implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Removes padding and heading. The internal content will fill the modal container.
  """
  modalFrameless: Boolean

  """Defaults to automatic/adaptive"""
  modalHeight: Float
  modalHtml: String
  modalTitle: String

  """Makes the container background transparent."""
  modalTransparent: Boolean
  modalVideoUrl: String

  """Defaults to max. 800px"""
  modalWidth: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionNfs implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  filtering: WpContentSection_Sectiondetails_SectionBlurbs_SectionNfs_Filtering
  navigation: WpContentSection_Sectiondetails_SectionBlurbs_SectionNfs_Navigation
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionNfs_Filtering implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """When ON a search box will be added on the top of the list."""
  search: Boolean
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionBlurbs_SectionNfs_Navigation implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Maximum number of items per page."""
  itemsPerPage: Float

  """When ON, adds a page navigation component below the list."""
  pagination: Boolean
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionCarouselConfiguration: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration
  sectionCarouselFeed: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed
  sectionCarouselItems: [WpContentSection_Sectiondetails_SectionCarousel_sectionCarouselItems]

  """
  &#039;Feed&#039; will auto-load the latest items from videos, posts, events, or news. 
  &#039;Custom&#039; will allow you to fully customize each element.
  """
  sectionCarouselType: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  When a button is created and stretched on, the component will be clickable but the button will remain hidden.
  """
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean
  sectionCarouselConfigurationAutoplay: Boolean

  """
  Interval in milliseconds to automatically go to the next item when autoPlay is true, defaults to 3000.
  """
  sectionCarouselConfigurationAutoplayInterval: Float

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  sectionCarouselConfigurationBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  sectionCarouselConfigurationBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  sectionCarouselConfigurationClass: String

  """Show dots under the items."""
  sectionCarouselConfigurationDots: Boolean

  """Use this to style the dot list."""
  sectionCarouselConfigurationDotsClass: String

  """For desktop."""
  sectionCarouselConfigurationDraggable: Boolean

  """Gap between each item on the carousel."""
  sectionCarouselConfigurationGap: String

  """
  Each item will grow vertically, consuming the remaining vertical space; all the items will have equal height.
  """
  sectionCarouselConfigurationGrow: Boolean
  sectionCarouselConfigurationImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  sectionCarouselConfigurationImageFit: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-position&#039; target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  sectionCarouselConfigurationImagePosition: String
  sectionCarouselConfigurationInfinite: Boolean
  sectionCarouselConfigurationItemType: String
  sectionCarouselConfigurationPartiallyVisible: Boolean
  sectionCarouselConfigurationResponsive: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive

  """
  It makes the first button link stretched to the whole container, making the
  full element clickable. Read more on &lt;a
  href=&quot;https://getbootstrap.com/docs/4.4/utilities/stretched-link/&quot; target=&quot;_blank&quot;&gt;https://getbootstrap.com/docs/4.4/utilities/stretched-link/&lt;/a&gt;
  """
  sectionCarouselConfigurationStretched: Boolean

  """For mobile."""
  sectionCarouselConfigurationSwipe: Boolean
  sectionCarouselConfigurationTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  sectionCarouselConfigurationTruncateLines: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveL: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive_ResponsiveL
  responsiveS: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive_ResponsiveS
  responsiveXl: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive_ResponsiveXl
  responsiveXs: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive_ResponsiveXs
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive_ResponsiveL implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveLCustom: Boolean
  responsiveLItems: Float
  responsiveLMax: Float
  responsiveLMin: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive_ResponsiveS implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveSCustom: Boolean
  responsiveSItems: Float
  responsiveSMax: Float
  responsiveSMin: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive_ResponsiveXl implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveXlCustom: Boolean
  responsiveXlItems: Float
  responsiveXlMax: Float
  responsiveXlMin: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselConfiguration_SectionCarouselConfigurationResponsive_ResponsiveXs implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveXsCustom: Boolean
  responsiveXsItems: Float
  responsiveXsMax: Float
  responsiveXsMin: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed implements WpAcfFieldGroup {
  """
  It affects the button of each blurb on the carousel. Combine with the carousel configuration for more display options.
  """
  buttonBehavior: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_ButtonBehavior
  feedCourses: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedCourses
  feedEvents: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedEvents
  feedGroups: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedGroups
  feedGrouptypes: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedGrouptypes
  feedLessons: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedLessons

  """Defines how many items will be shown."""
  feedLimit: Float
  feedMinistries: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedMinistries
  feedNews: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedNews
  feedPosts: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedPosts
  feedSeries: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedSeries

  """Skip items on the list."""
  feedSkip: Float
  feedType: String
  feedVideos: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedVideos
  feedVolunteering: WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedVolunteering

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedCourses implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedCoursesCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedEvents implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedEventsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedGroups implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedGroupsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedGrouptypes implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedGrouptypesCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedLessons implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedLessonsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedMinistries implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedMinistriesCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedNews implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedNewsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedPosts implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedPostsCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedSeries implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedSeriesCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedVideos implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedVideosCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_SectionCarouselFeed_FeedVolunteering implements WpAcfFieldGroup {
  """If a category is selected, only the associated items will be shown."""
  feedVolunteeringCategory: WpCategory

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_sectionCarouselItems implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemButtons: WpContentSection_Sectiondetails_SectionCarousel_sectionCarouselItems_ItemButtons
  itemContent: String
  itemCss: String
  itemCssRemoveDefault: Boolean
  itemImage: WpMediaItem
  itemSubtitle: String
  itemTitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_sectionCarouselItems_ItemButtons implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemButtonsButton: [WpContentSection_Sectiondetails_SectionCarousel_sectionCarouselItems_ItemButtons_itemButtonsButton]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_sectionCarouselItems_ItemButtons_itemButtonsButton implements WpAcfFieldGroup {
  buttonCss: String

  """
  It remove any default classes added by the website to allow you full control
  """
  buttonCssRemoveDefault: Boolean
  buttonLink: String
  buttonModal: WpContentSection_Sectiondetails_SectionCarousel_sectionCarouselItems_ItemButtons_itemButtonsButton_ButtonModal
  buttonTarget: String
  buttonText: String
  buttonType: String
  buttonUrl: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCarousel_sectionCarouselItems_ItemButtons_itemButtonsButton_ButtonModal implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Removes padding and heading. The internal content will fill the modal container.
  """
  modalFrameless: Boolean

  """Defaults to automatic/adaptive"""
  modalHeight: Float
  modalHtml: String
  modalTitle: String

  """Makes the container background transparent."""
  modalTransparent: Boolean
  modalVideoUrl: String

  """Defaults to max. 800px"""
  modalWidth: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionConfiguration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """This will allow you to add layers to your section background."""
  sectionConfigurationBackground: WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground

  """
  It&#039;s recommended to use Bootstrap classes in order to facilitate styling.
  Read more at https://getbootstrap.com/docs/4.1/utilities
  """
  sectionConfigurationClassname: String

  """
  If the section have the option available the corresponding mode will be
  applied. &#039;Automatic&#039; will get mode from the current page.
  """
  sectionConfigurationColorScheme: String

  """Container inside the section component"""
  sectionConfigurationContainerWidth: String

  """Use one word only (E.g. &#039;my-new-id&#039;)"""
  sectionConfigurationId: String

  """
  This is the responsive height. Final height depend on user&#039;s screen size and internal content.
  """
  sectionConfigurationSize: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground implements WpAcfFieldGroup {
  backgroundLayer: [WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer]

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer implements WpAcfFieldGroup {
  backgroundLayerColor: WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerColor
  backgroundLayerGradient: WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerGradient
  backgroundLayerImage: WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerImage
  backgroundLayerText: WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerText
  backgroundLayerType: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerColor implements WpAcfFieldGroup {
  backgroundLayerColorColor: String
  backgroundLayerColorOpacity: Float

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerGradient implements WpAcfFieldGroup {
  backgroundLayerGradientAngle: Float
  backgroundLayerGradientOpacity: Float
  backgroundLayerGradientSteps: [WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerGradient_backgroundLayerGradientSteps]
  backgroundLayerGradientType: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerGradient_backgroundLayerGradientSteps implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  step: WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerGradient_backgroundLayerGradientSteps_Step
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerGradient_backgroundLayerGradientSteps_Step implements WpAcfFieldGroup {
  color: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  stop: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerImage implements WpAcfFieldGroup {
  backgroundLayerImageFixed: Boolean
  backgroundLayerImageImage: WpMediaItem
  backgroundLayerImageOpacity: Float
  backgroundLayerImagePosition: String
  backgroundLayerImageRepeat: String
  backgroundLayerImageSize: String

  """
  Use CSS values (Eg. &#039;auto&#039;, &#039;100px 100px&#039;, &#039;100%
  100%&#039;). Read more at
  https://developer.mozilla.org/en-US/docs/Web/CSS/background-size.
  """
  backgroundLayerImageSizeCustom: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionConfiguration_SectionConfigurationBackground_backgroundLayer_BackgroundLayerText implements WpAcfFieldGroup {
  backgroundLayerTextOpacity: Float
  backgroundLayerTextText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCta implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Please fill out all the fields"""
  sectionCtaButton: WpContentSection_Sectiondetails_SectionCta_SectionCtaButton

  """Please fill out all the fields"""
  sectionCtaLink: WpContentSection_Sectiondetails_SectionCta_SectionCtaLink
  sectionCtaPhoto: WpMediaItem
  sectionCtaSubtitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCta_SectionCtaButton implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionButtonText: String

  """
  Use internal for links on the same website. Use external when adding a URL outside the website or app.
  """
  sectionButtonType: String

  """
  For Internal link don&#039;t use the full URL, instead use something like &quot;/my-page&quot;.
  """
  sectionButtonUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionCta_SectionCtaLink implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionLinkText: String

  """
  Use internal for links on the same website or app. Use external when adding a URL outside the website or app.
  """
  sectionLinkType: String

  """
  For Internal link don&#039;t use the full URL, instead use something like &quot;/my-page&quot;.
  """
  sectionLinkUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionFollow implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowConfiguration: WpContentSection_Sectiondetails_SectionFollow_SectionFollowConfiguration
  sectionFollowNetworks: WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionFollow_SectionFollowConfiguration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowConfigurationAlignment: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksFacebook: WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksFacebook
  sectionFollowNetworksInstagram: WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksInstagram
  sectionFollowNetworksPinterest: WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksPinterest
  sectionFollowNetworksTiktok: WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksTiktok
  sectionFollowNetworksTwitter: WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksTwitter

  """
  Select the social network icons you want to make available. Reorder this list to reorder the social icons on the page.
  """
  sectionFollowNetworksType: [String]
  sectionFollowNetworksYoutube: WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksYoutube
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksFacebook implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksFacebookUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksInstagram implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksInstagramUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksPinterest implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksPinterestUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksTiktok implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksTiktokUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksTwitter implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksTwitterUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionFollow_SectionFollowNetworks_SectionFollowNetworksYoutube implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksYoutubeUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFormColumns: WpContentSection_Sectiondetails_SectionForm_SectionFormColumns
  sectionFormConfiguration: WpContentSection_Sectiondetails_SectionForm_SectionFormConfiguration
  sectionFormForm: WpContentSection_Sectiondetails_SectionForm_SectionFormForm

  """
  Show the form inside an adaptative iframe. &lt;strong&gt;Warning: This will expose your backend url.&lt;/strong&gt;
  """
  sectionFormIframe: Boolean

  """Select the desired section layout for the form."""
  sectionFormType: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormColumns implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Align the text and graphic column to the left or right of the form."""
  sectionFormColumnsAlignment: String

  """This will allow you to add background layers to your secondary column."""
  sectionFormColumnsBackground: WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground

  """
  The Text content below will be above everything else allowing you to add
  instructions, links or any other helpful information.
  """
  sectionFormColumnsText: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground implements WpAcfFieldGroup {
  backgroundLayer: [WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer]

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer implements WpAcfFieldGroup {
  backgroundLayerColor: WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerColor
  backgroundLayerGradient: WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerGradient
  backgroundLayerImage: WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerImage
  backgroundLayerText: WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerText
  backgroundLayerType: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerColor implements WpAcfFieldGroup {
  backgroundLayerColorColor: String
  backgroundLayerColorOpacity: Float

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerGradient implements WpAcfFieldGroup {
  backgroundLayerGradientAngle: Float
  backgroundLayerGradientOpacity: Float
  backgroundLayerGradientSteps: [WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerGradient_backgroundLayerGradientSteps]
  backgroundLayerGradientType: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerGradient_backgroundLayerGradientSteps implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  step: WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerGradient_backgroundLayerGradientSteps_Step
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerGradient_backgroundLayerGradientSteps_Step implements WpAcfFieldGroup {
  color: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  stop: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerImage implements WpAcfFieldGroup {
  backgroundLayerImageFixed: Boolean
  backgroundLayerImageImage: WpMediaItem
  backgroundLayerImageOpacity: Float
  backgroundLayerImagePosition: String
  backgroundLayerImageRepeat: String
  backgroundLayerImageSize: String

  """
  Use CSS values (Eg. &#039;auto&#039;, &#039;100px 100px&#039;, &#039;100%
  100%&#039;). Read more at
  https://developer.mozilla.org/en-US/docs/Web/CSS/background-size.
  """
  backgroundLayerImageSizeCustom: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormColumns_SectionFormColumnsBackground_backgroundLayer_BackgroundLayerText implements WpAcfFieldGroup {
  backgroundLayerTextOpacity: Float
  backgroundLayerTextText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionForm_SectionFormConfiguration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFormConfigurationClass: String

  """Uses Bootstrap&#039;s Jumbotron."""
  sectionFormConfigurationJumbotron: Boolean

  """Make the Boxed form full width if the parent container allows it."""
  sectionFormConfigurationJumbotronFluid: Boolean
  sectionFormConfigurationJumbotronMode: String
  sectionFormConfigurationJumbotronPadding: String

  """
  Overwrite URL parameters passed by the user and force new query string
  parameters. Use a valid format Eg.
  &#039;?classname=light-primary&amp;origin=newherepage&#039;
  """
  sectionFormConfigurationQuerystring: String
}

union WpContentSection_Sectiondetails_SectionForm_SectionFormForm = WpForm

"""Field Group"""
type WpContentSection_Sectiondetails_SectionHero implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionHeroBackground: WpMediaItem
  sectionHeroButtons: WpContentSection_Sectiondetails_SectionHero_SectionHeroButtons
  sectionHeroConfiguration: WpContentSection_Sectiondetails_SectionHero_SectionHeroConfiguration

  """
  Attach a single news, event, page or post to this hero. Use this to show your users the latest piece of information.
  """
  sectionHeroRelated: [WpContentSection_Sectiondetails_SectionHero_SectionHeroRelated]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionHero_SectionHeroButtons implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionHeroButton: [WpContentSection_Sectiondetails_SectionHero_SectionHeroButtons_sectionHeroButton]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionHero_SectionHeroButtons_sectionHeroButton implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionHeroButtonCss: String
  sectionHeroButtonCssRemoveDefault: Boolean
  sectionHeroButtonLink: String
  sectionHeroButtonModal: WpContentSection_Sectiondetails_SectionHero_SectionHeroButtons_sectionHeroButton_SectionHeroButtonModal
  sectionHeroButtonTarget: String
  sectionHeroButtonText: String
  sectionHeroButtonType: String
  sectionHeroButtonUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionHero_SectionHeroButtons_sectionHeroButton_SectionHeroButtonModal implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Removes padding and heading. The internal content will fill the modal container.
  """
  modalFrameless: Boolean

  """Defaults to automatic/adaptive"""
  modalHeight: Float
  modalHtml: String
  modalTitle: String

  """Makes the container background transparent."""
  modalTransparent: Boolean
  modalVideoUrl: String

  """Defaults to max. 800px"""
  modalWidth: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionHero_SectionHeroConfiguration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Add on top of the featured photo an overlay layer with a standard opacity.
  """
  sectionHeroConfigurationOverlay: Boolean
}

union WpContentSection_Sectiondetails_SectionHero_SectionHeroRelated = WpPost | WpNewspost | WpEvent | WpPage

"""Field Group"""
type WpContentSection_Sectiondetails_SectionIframe implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionIframeCustom: String
  sectionIframeOembed: String
  sectionIframeType: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionPagemenu implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Select the previously created Page menu you want to use"""
  sectionPagemenuMenu: WpContentSection_Sectiondetails_SectionPagemenu_SectionPagemenuMenu
  sectionSticky: Boolean
}

union WpContentSection_Sectiondetails_SectionPagemenu_SectionPagemenuMenu = WpCustomMenu

"""Field Group"""
type WpContentSection_Sectiondetails_SectionPodcast implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionPodcastGraphic: WpMediaItem
  sectionPodcastItunesUrl: String
  sectionPodcastSoundcloudUrl: String
  sectionPodcastSpotifyUrl: String
  sectionPodcastSubtitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionQrcode implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Leave empty to use default"""
  sectionQrcodeButtonText: String

  """
  Select the &#039;Current Page&#039; to allow the QR code to use the current
  page URL. &#039;Personalized URL&#039; allows you to point to a website
  address of your preference.
  """
  sectionQrcodeDestination: String
  sectionQrcodeUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionShareImage: WpContentSection_Sectiondetails_SectionShare_SectionShareImage

  """Add a class to each social media share icon."""
  sectionShareItemClass: String
  sectionShareNetworks: WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare_SectionShareImage implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Align media to left or right of the text"""
  sectionShareImageAlignment: String
  sectionShareImageImage: WpMediaItem
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionShareNetworksEmail: WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksEmail
  sectionShareNetworksFacebook: WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksFacebook
  sectionShareNetworksPocket: WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksPocket
  sectionShareNetworksQrcode: WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksQrcode
  sectionShareNetworksTelegram: WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksTelegram
  sectionShareNetworksTwitter: WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksTwitter

  """
  Select the share icons you want to make available on the website. Order can be changed as well.
  """
  sectionShareNetworksType: [String]
  sectionShareNetworksWhatsapp: WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksWhatsapp
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksEmail implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionShareNetworksEmailBody: String
  sectionShareNetworksEmailCustomUrl: Boolean
  sectionShareNetworksEmailCustomUrlUrl: String
  sectionShareNetworksEmailSubject: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksFacebook implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionShareNetworksFacebookCustomUrl: Boolean
  sectionShareNetworksFacebookCustomUrlUrl: String

  """
  A hashtag specified to be added to the shared content. People will still have
  the opportunity to remove this hashtag in the dialog. The hashtag should
  include the hash symbol.
  """
  sectionShareNetworksFacebookHashtags: String
  sectionShareNetworksFacebookQuote: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksPocket implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionShareNetworksPocketCustomUrl: Boolean
  sectionShareNetworksPocketCustomUrlUrl: String
  sectionShareNetworksPocketTitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksQrcode implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Select the &#039;Current Page&#039; to allow the QR code to use the current
  page URL. &#039;Personalized URL&#039; allows you to point to a website
  address of your preference.
  """
  sectionShareNetworksQrcodeDestination: String
  sectionShareNetworksQrcodeUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksTelegram implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionShareNetworksTelegramCustomUrl: Boolean
  sectionShareNetworksTelegramCustomUrlUrl: String
  sectionShareNetworksTelegramTitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksTwitter implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionShareNetworksTwitterCustomUrl: Boolean
  sectionShareNetworksTwitterCustomUrlUrl: String

  """
  Hashtags specified to be added to the shared content. People will still have
  the opportunity to remove this hashtag in the dialog. The hashtag
  &lt;strong&gt;shouldn&#039;t include the hash symbol&lt;/strong&gt;.
  """
  sectionShareNetworksTwitterHashtags: String

  """Accounts to recommend following."""
  sectionShareNetworksTwitterRelated: String
  sectionShareNetworksTwitterTitle: String

  """
  This is a way to let people know where your content is from and to give credit
  to the original content creator. Use a single account without spaces.
  """
  sectionShareNetworksTwitterVia: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionShare_SectionShareNetworks_SectionShareNetworksWhatsapp implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionShareNetworksWhatsappCustomUrl: Boolean
  sectionShareNetworksWhatsappCustomUrlUrl: String
  sectionShareNetworksWhatsappTitle: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionTabs implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionTabsTab: [WpContentSection_Sectiondetails_SectionTabs_sectionTabsTab]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionTabs_sectionTabsTab implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """You"""
  sectionTabsTabContent: String
  sectionTabsTabName: String
  sectionTabsTabSection: WpContentSection_Sectiondetails_SectionTabs_sectionTabsTab_SectionTabsTabSection
  sectionTabsTabType: String
}

union WpContentSection_Sectiondetails_SectionTabs_sectionTabsTab_SectionTabsTabSection = WpContentSection

"""Field Group"""
type WpContentSection_Sectiondetails_SectionText implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionTextButtons: WpContentSection_Sectiondetails_SectionText_SectionTextButtons
  sectionTextMedia: WpContentSection_Sectiondetails_SectionText_SectionTextMedia

  """
  Add nested custom section. Note: The nested sections selected below will not
  be shown when this section is called as a nested section in somewhere else.
  """
  sectionTextSections: [WpContentSection_Sectiondetails_SectionText_SectionTextSections]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionText_SectionTextButtons implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionTextButton: [WpContentSection_Sectiondetails_SectionText_SectionTextButtons_sectionTextButton]
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionText_SectionTextButtons_sectionTextButton implements WpAcfFieldGroup {
  buttonCss: String

  """
  It remove any default classes added by the website to allow you full control
  """
  buttonCssRemoveDefault: Boolean
  buttonLink: String
  buttonModal: WpContentSection_Sectiondetails_SectionText_SectionTextButtons_sectionTextButton_ButtonModal
  buttonTarget: String
  buttonText: String
  buttonType: String
  buttonUrl: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionText_SectionTextButtons_sectionTextButton_ButtonModal implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Removes padding and heading. The internal content will fill the modal container.
  """
  modalFrameless: Boolean

  """Defaults to automatic/adaptive"""
  modalHeight: Float
  modalHtml: String
  modalTitle: String

  """Makes the container background transparent."""
  modalTransparent: Boolean
  modalVideoUrl: String

  """Defaults to max. 800px"""
  modalWidth: Float
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionText_SectionTextMedia implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Align media to left or right of the text"""
  sectionTextbasicMediaAlignment: String
  sectionTextbasicMediaPhoto: WpMediaItem
  sectionTextbasicMediaType: String
}

union WpContentSection_Sectiondetails_SectionText_SectionTextSections = WpContentSection

"""Field Group"""
type WpContentSection_Sectiondetails_SectionVideo implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionVideoConfiguration: WpContentSection_Sectiondetails_SectionVideo_SectionVideoConfiguration

  """
  Thumbnail is available when the &quot;light&quot; option is true. When the
  &quot;light&quot; player is activated video thumbnail will be available with a
  simple play icon, and only load the full player once a user has interacted
  with the image.
  """
  sectionVideoThumbnail: WpMediaItem

  """
  Recommended to use .m3u8 files for adaptive streaming (quality adapts to user device and internet connection).
  """
  sectionVideoUrl: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionVideo_SectionVideoConfiguration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  As of Chrome 66, videos must be muted in order to play automatically. Some
  players, like Facebook, cannot be unmuted until the user interacts with the
  video, so you may want to enable controls to allow users to unmute videos
  themselves. Please set muted to true.
  """
  sectionVideoConfigurationAutoplay: Boolean

  """Select No to hide native player controls."""
  sectionVideoConfigurationControls: Boolean
  sectionVideoConfigurationHeight: String

  """Select Yes or No to loop the media."""
  sectionVideoConfigurationLoop: Boolean
  sectionVideoConfigurationMaxWidth: String

  """Mutes the player"""
  sectionVideoConfigurationMuted: Boolean

  """Set to Yes or No to enable or disable picture-in-picture mode"""
  sectionVideoConfigurationPip: Boolean

  """Set the volume of the player, between 0 and 1"""
  sectionVideoConfigurationVolume: Float
  sectionVideoConfigurationWidth: String
}

"""Field Group"""
type WpContentSection_Sectiondetails_SectionVodSeries implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionVodSeriesList: [WpContentSection_Sectiondetails_SectionVodSeries_SectionVodSeriesList]
}

union WpContentSection_Sectiondetails_SectionVodSeries_SectionVodSeriesList = WpSerie

"""Field Group"""
type WpContentSection_Sectiondetails_SectionVodTags implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionVodTag: WpTag
}

"""Connection between the contentSection type and the TermNode type"""
type WpContentSectionToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

type WpForm implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithContentEditor & WpNodeWithRevisions & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """The content of the post."""
  content: String

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Form Details&quot; was set to Show in GraphQL.
  """
  formDetails: WpForm_Formdetails

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The Yoast SEO data of the form"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the form type and the TermNode type"""
  terms: WpFormToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpForm]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpForm_Formdetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  formGeneral: WpForm_Formdetails_FormGeneral
}

"""Field Group"""
type WpForm_Formdetails_FormGeneral implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Leave empty if you don&#039;t want to show any content above the form."""
  formGeneralContent: String

  """Leave empty if you don&#039;t want to show any title above the form."""
  formGeneralTitle: String
}

"""Connection between the form type and the TermNode type"""
type WpFormToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

type WpLinkTag implements Node & WpNode & WpTermNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpHierarchicalTermNode & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """
  The ancestors of the node. Default ordered as lowest (closest to the child) to highest (closest to the root).
  """
  ancestors: WpLinkTagToAncestorsLinkTagConnection

  """Connection between the linkTag type and the linkTag type"""
  wpChildren: WpLinkTagToLinkTagConnection

  """Connection between the linkTag type and the ContentNode type"""
  contentNodes: WpLinkTagToContentNodeConnection

  """The number of objects connected to the object"""
  count: Int

  """The unique resource identifier path"""
  databaseId: Int!

  """The description of the object"""
  description: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """List available translations for this post"""
  language: WpLanguage

  """The link to the term"""
  link: String

  """Connection between the linkTag type and the linkitem type"""
  linkitems: WpLinkTagToLinkitemConnection

  """The human friendly name of the object."""
  name: String

  """Connection between the linkTag type and the linkTag type"""
  wpParent: WpLinkTagToParentLinkTagConnectionEdge

  """Database id of the parent node"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent node."""
  parentId: ID

  """The Yoast SEO data of the Categories taxonomy."""
  seo: WpTaxonomySEO

  """An alphanumeric identifier for the object unique to its type."""
  slug: String

  """Connection between the linkTag type and the Taxonomy type"""
  taxonomy: WpLinkTagToTaxonomyConnectionEdge

  """The name of the taxonomy that the object is associated with"""
  taxonomyName: String

  """The ID of the term group that this term object belongs to"""
  termGroupId: Int

  """The taxonomy ID that the object is associated with"""
  termTaxonomyId: Int

  """List all translated versions of this term"""
  translations: [WpLinkTag]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Connection between the linkTag type and the linkTag type"""
type WpLinkTagToAncestorsLinkTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpLinkTag]
}

"""Connection between the linkTag type and the linkTag type"""
type WpLinkTagToLinkTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpLinkTag]
}

"""Connection between the linkTag type and the ContentNode type"""
type WpLinkTagToContentNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpContentNode]
}

"""Connection between the linkTag type and the linkitem type"""
type WpLinkTagToLinkitemConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpLinkitem]
}

"""The linkitem type"""
type WpLinkitem implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithFeaturedImage & WpNodeWithExcerpt & WpMenuItemLinkable @dontInfer {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """The excerpt of the post."""
  excerpt: String

  """
  Connection between the NodeWithFeaturedImage type and the MediaItem type
  """
  featuredImage: WpNodeWithFeaturedImageToMediaItemConnectionEdge

  """
  The database identifier for the featured image node assigned to the content node
  """
  featuredImageDatabaseId: Int

  """Globally unique ID of the featured image assigned to the node"""
  featuredImageId: ID

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Link Details&quot; was set to Show in GraphQL.
  """
  linkDetails: WpLinkitem_Linkdetails

  """Connection between the linkitem type and the linkTag type"""
  linkTags: WpLinkitemToLinkTagConnection

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The Yoast SEO data of the linkitem"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to a node of content"""
  template: WpContentTemplate

  """Connection between the linkitem type and the TermNode type"""
  terms: WpLinkitemToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpLinkitem]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpLinkitem_Linkdetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  linkLink: WpLinkitem_Linkdetails_LinkLink
}

"""Field Group"""
type WpLinkitem_Linkdetails_LinkLink implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  linkLinkTarget: String

  """
  Use internal for links on the same website or app. Use external when adding a URL outside the website or app.
  """
  linkLinkType: String

  """
  For Internal link don&#039;t use the full URL, instead use something like &quot;/my-page&quot;.
  """
  linkLinkUrl: String
}

"""Connection between the linkitem type and the linkTag type"""
type WpLinkitemToLinkTagConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpLinkTag]
}

"""Connection between the linkitem type and the TermNode type"""
type WpLinkitemToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

"""Connection between the linkTag type and the linkTag type"""
type WpLinkTagToParentLinkTagConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpLinkTag
}

"""Connection between the linkTag type and the Taxonomy type"""
type WpLinkTagToTaxonomyConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpTaxonomy
}

type WpDocument implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithExcerpt & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Attachment Details&quot; was set to Show in GraphQL.
  """
  attachment: WpDocument_Attachment

  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """The excerpt of the post."""
  excerpt: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The Yoast SEO data of the document"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the document type and the TermNode type"""
  terms: WpDocumentToTermNodeConnection

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """List all translated versions of this post"""
  translations: [WpDocument]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpDocument_Attachment implements WpAcfFieldGroup {
  attachmentCampus: [WpDocument_Attachment_AttachmentCampus]
  attachmentFile: WpMediaItem
  attachmentHide: WpDocument_Attachment_AttachmentHide

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

union WpDocument_Attachment_AttachmentCampus = WpCampus

"""Field Group"""
type WpDocument_Attachment_AttachmentHide implements WpAcfFieldGroup {
  attachmentHideSearchEngines: Boolean
  attachmentHideSearchResults: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Connection between the document type and the TermNode type"""
type WpDocumentToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

type WpSeason implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Season Details&quot; was set to Show in GraphQL.
  """
  seasonDetails: WpSeason_Seasondetails

  """The Yoast SEO data of the season"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the season type and the TermNode type"""
  terms: WpSeasonToTermNodeConnection

  """List all translated versions of this post"""
  translations: [WpSeason]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpSeason_Seasondetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  seasonOrder: Float
  seasonSerie: WpSeason_Seasondetails_SeasonSerie
  seasonTitle: String
}

union WpSeason_Seasondetails_SeasonSerie = WpSerie

"""Connection between the season type and the TermNode type"""
type WpSeasonToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

type WpCustomMenu implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """Polylang language"""
  language: WpLanguage

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Section Menu Details&quot; was set to Show in GraphQL.
  """
  menuDetails: WpCustomMenu_Menudetails

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The Yoast SEO data of the customMenu"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """Connection between the customMenu type and the TermNode type"""
  terms: WpCustomMenuToTermNodeConnection

  """List all translated versions of this post"""
  translations: [WpCustomMenu]

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpCustomMenu_Menudetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  If the menu have the option available the corresponding mode will be applied.
  """
  menuColorScheme: String
  menuCss: String
  menuCustomTitle: String

  """Use a single word id (E.g. &#039;my-new-id&#039;)"""
  menuId: String

  """
  Group pages or custom links within pages. Please add individually to each page to ensure a logical navigation
  """
  menuPagesMenu: WpCustomMenu_Menudetails_MenuPagesMenu
}

"""Field Group"""
type WpCustomMenu_Menudetails_MenuPagesMenu implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Add to one level deep items"""
  menuPageMenuItems: [WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems]
  menuPagesMenuBase: WpCustomMenu_Menudetails_MenuPagesMenu_MenuPagesMenuBase
}

"""Field Group"""
type WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  menuPageMenuItem: WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems_MenuPageMenuItem
}

"""Field Group"""
type WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems_MenuPageMenuItem implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  menuPageMenuItemCustom: WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems_MenuPageMenuItem_MenuPageMenuItemCustom
  menuPageMenuItemPage: WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems_MenuPageMenuItem_MenuPageMenuItemPage
  menuPageMenuItemType: String
}

"""Field Group"""
type WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems_MenuPageMenuItem_MenuPageMenuItemCustom implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  menuPageMenuItemCustomCss: String

  """
  Use internal for links on the same website or app. Use external when adding a URL outside the website or app.
  """
  menuPageMenuItemCustomLinkType: String
  menuPageMenuItemCustomTarget: String
  menuPageMenuItemCustomTitle: String
  menuPageMenuItemCustomUrl: String
  removeDefaultCssClasses: Boolean
}

"""Field Group"""
type WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems_MenuPageMenuItem_MenuPageMenuItemPage implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  menuPageMenuItemPageCss: String
  menuPageMenuItemPagePage: WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems_MenuPageMenuItem_MenuPageMenuItemPage_MenuPageMenuItemPagePage
  menuPageMenuItemPageRemoveDefault: Boolean
  menuPageMenuItemPageTitle: String
}

union WpCustomMenu_Menudetails_MenuPagesMenu_menuPageMenuItems_MenuPageMenuItem_MenuPageMenuItemPage_MenuPageMenuItemPagePage = WpPage

"""Field Group"""
type WpCustomMenu_Menudetails_MenuPagesMenu_MenuPagesMenuBase implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  menuPagesMenuBaseTitle: String
  menuPagesMenuBaseUrl: String

  """Activate to Hide the Menu base Title and URL and show only menu items."""
  menuPagesMenuHideBase: Boolean
}

"""Connection between the customMenu type and the TermNode type"""
type WpCustomMenuToTermNodeConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpTermNode]
}

type WpEventVenue implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpMenuItemLinkable @isPlaceholder @dontInfer {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The Yoast SEO data of the eventVenue"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """The unique resource identifier path"""
  uri: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Venue Details&quot; was set to Show in GraphQL.
  """
  venueDetails: WpEventVenue_Venuedetails
  nodeType: String
}

"""Field Group"""
type WpEventVenue_Venuedetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  venueAddress: String
}

"""The LandingPage type"""
type WpLandingPage implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpNodeWithTitle & WpNodeWithRevisions & WpMenuItemLinkable @dontInfer {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;General&quot; was set to Show in GraphQL.
  """
  general: WpLandingPage_General

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """True if the node is a revision of another node"""
  isRevision: Boolean

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Layout&quot; was set to Show in GraphQL.
  """
  pageLayout: WpLandingPage_Pagelayout

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Template Override&quot; was set to Show in GraphQL.
  """
  pageSettings: WpLandingPage_Pagesettings

  """The Yoast SEO data of the LandingPage"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """
  The title of the post. This is currently just the raw title. An amendment to support rendered title needs to be made.
  """
  title: String

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpLandingPage_General implements WpAcfFieldGroup {
  campus: [WpLandingPage_General_Campus]
  campusId: String
  featuredPhoto: WpMediaItem

  """The name of the ACF Field Group"""
  fieldGroupName: String
  summary: String
}

union WpLandingPage_General_Campus = WpCampus

"""Field Group"""
type WpLandingPage_Pagelayout implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  pageLayout: [WpLandingPage_Pagelayout_PageLayout]
}

union WpLandingPage_Pagelayout_PageLayout = WpContentSection

"""Field Group"""
type WpLandingPage_Pagesettings implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStyles: WpLandingPage_Pagesettings_SettingsStyles
}

"""Field Group"""
type WpLandingPage_Pagesettings_SettingsStyles implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesFooter: WpLandingPage_Pagesettings_SettingsStyles_SettingsStylesFooter
  settingsStylesGraphics: WpLandingPage_Pagesettings_SettingsStyles_SettingsStylesGraphics
  settingsStylesHeader: WpLandingPage_Pagesettings_SettingsStyles_SettingsStylesHeader
}

"""Field Group"""
type WpLandingPage_Pagesettings_SettingsStyles_SettingsStylesFooter implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesFooterColor: String
}

"""Field Group"""
type WpLandingPage_Pagesettings_SettingsStyles_SettingsStylesGraphics implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesGraphicsLogo: WpMediaItem
}

"""Field Group"""
type WpLandingPage_Pagesettings_SettingsStyles_SettingsStylesHeader implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesHeaderColor: String
}

"""All of the registered settings"""
type WpSettings {
  """Settings of the the string Settings Group"""
  discussionSettingsDefaultCommentStatus: String

  """Settings of the the string Settings Group"""
  discussionSettingsDefaultPingStatus: String

  """Settings of the the string Settings Group"""
  generalSettingsDateFormat: String

  """Settings of the the string Settings Group"""
  generalSettingsDescription: String

  """Settings of the the string Settings Group"""
  generalSettingsEmail: String

  """Settings of the the string Settings Group"""
  generalSettingsLanguage: String

  """Settings of the the integer Settings Group"""
  generalSettingsStartOfWeek: Int

  """Settings of the the string Settings Group"""
  generalSettingsTimeFormat: String

  """Settings of the the string Settings Group"""
  generalSettingsTimezone: String

  """Settings of the the string Settings Group"""
  generalSettingsTitle: String

  """Settings of the the string Settings Group"""
  generalSettingsUrl: String

  """Settings of the the integer Settings Group"""
  readingSettingsPostsPerPage: Int

  """Settings of the the integer Settings Group"""
  writingSettingsDefaultCategory: Int

  """Settings of the the string Settings Group"""
  writingSettingsDefaultPostFormat: String

  """Settings of the the boolean Settings Group"""
  writingSettingsUseSmilies: Boolean
}

"""The discussion setting type"""
type WpDiscussionSettings {
  """Allow people to submit comments on new posts."""
  defaultCommentStatus: String

  """
  Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.
  """
  defaultPingStatus: String
}

"""The general setting type"""
type WpGeneralSettings {
  """A date format for all date strings."""
  dateFormat: String

  """Site tagline."""
  description: String

  """This address is used for admin purposes, like new user notification."""
  email: String

  """WordPress locale code."""
  language: String

  """A day number of the week that the week should start on."""
  startOfWeek: Int

  """A time format for all time strings."""
  timeFormat: String

  """A city in the same timezone as you."""
  timezone: String

  """Site title."""
  title: String

  """Site URL."""
  url: String
}

"""The mainMenu type"""
type WpMainMenu implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpMenuItemLinkable @dontInfer {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Main Menu Details&quot; was set to Show in GraphQL.
  """
  mainMenuDetails: WpMainMenu_Mainmenudetails

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """The Yoast SEO data of the mainMenu"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Navigation for campus-level sites. Create a custom menu for all the campuses
  (select in settings) or per campus (select in campus view to rewriting the
  global-campus menu)
  """
  mainMenu: WpMainMenu_Mainmenudetails_MainMenu

  """
  When Collapse is activated allows to show the menu on mobile &lt;span
  class=&quot;dashicons dashicons-menu-alt2&quot;&gt;&lt;/span&gt;.
  """
  menuCollapse: Boolean

  """
  If the menu have the option available the corresponding mode will be applied.
  """
  menuColorScheme: String
  menuCss: String

  """Use a single word id (E.g. &#039;my-new-id&#039;)"""
  menuId: String
  menuTitle: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItems: [WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems]
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItem: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem implements WpAcfFieldGroup {
  configuration: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_Configuration

  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemBlog: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemBlog
  mainMenuItemDropdown: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown
  mainMenuItemEvents: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemEvents
  mainMenuItemNews: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemNews
  mainMenuItemPage: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemPage
  mainMenuItemTitle: String
  mainMenuItemType: String
  mainMenuItemWatch: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemWatch
  mainMenuMenuItemCustom: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuMenuItemCustom
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_Configuration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveness: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_Configuration_Responsiveness
  style: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_Configuration_Style
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_Configuration_Responsiveness implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Select on what screen device sizes you want to make visible the menu item.
  """
  visibility: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_Configuration_Style implements WpAcfFieldGroup {
  cssClass: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemBlog implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemCampusLocation: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemDropdownItems: [WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems]
  mainMenuItemDropdownMegamenu: Boolean

  """Select how many columns you want the mega menu to have."""
  mainMenuItemDropdownMegamenuColumns: Float
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems implements WpAcfFieldGroup {
  configuration: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_Configuration

  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemApp: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemApp
  mainMenuItemNewsletter: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemNewsletter
  mainMenuItemSocial: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial
  megaMenuColumn: Float
  menuItemGroupDropdownItemGroupBlog: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupBlog
  menuItemGroupDropdownItemGroupCustom: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupCustom
  menuItemGroupDropdownItemGroupDivider: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupDivider
  menuItemGroupDropdownItemGroupEvents: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupEvents
  menuItemGroupDropdownItemGroupHeader: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupHeader
  menuItemGroupDropdownItemGroupHtml: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupHtml
  menuItemGroupDropdownItemGroupNews: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupNews
  menuItemGroupDropdownItemGroupWatch: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupWatch
  menuItemGroupDropdownItemTitle: String
  menuItemGroupDropdownItemType: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_Configuration implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  responsiveness: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_Configuration_Responsiveness
  style: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_Configuration_Style
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_Configuration_Responsiveness implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Select on what screen device sizes you want to make visible the menu item.
  """
  visibility: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_Configuration_Style implements WpAcfFieldGroup {
  cssClass: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemApp implements WpAcfFieldGroup {
  customSettings: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemApp_CustomSettings

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  &#039;Automatic&#039; option gets the parameters from the &lt;a href=&quot;/wp/wp-admin/admin.php?page=website-general-settings&quot;&gt;Website
  Settings&lt;/a&gt;. Use &#039;Custom&#039; to provide your own settings.
  """
  settingsOrigin: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemApp_CustomSettings implements WpAcfFieldGroup {
  appleStore: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  googlePlay: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemNewsletter implements WpAcfFieldGroup {
  customSettings: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemNewsletter_CustomSettings
  description: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  &#039;Automatic&#039; option gets the parameters from the &lt;a href=&quot;/wp/wp-admin/admin.php?page=website-general-settings&quot;&gt;Website
  Settings&lt;/a&gt;. Use &#039;Custom&#039; to provide your own settings.
  """
  settingsOrigin: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemNewsletter_CustomSettings implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  newsletterProvider: String
  newsletterUrl: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworks: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks

  """
  &#039;Automatic&#039; option gets the parameters from the &lt;a href=&quot;/wp/wp-admin/admin.php?page=website-general-settings&quot;&gt;Website
  Settings&lt;/a&gt;. Use &#039;Custom&#039; to provide your own settings.
  """
  settingsOrigin: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksFacebook: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksFacebook
  sectionFollowNetworksInstagram: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksInstagram
  sectionFollowNetworksPinterest: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksPinterest
  sectionFollowNetworksTiktok: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksTiktok
  sectionFollowNetworksTwitter: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksTwitter

  """
  Select the social network icons you want to make available. Reorder this list to reorder the social icons on the page.
  """
  sectionFollowNetworksType: [String]
  sectionFollowNetworksYoutube: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksYoutube
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksFacebook implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksFacebookUrl: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksInstagram implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksInstagramUrl: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksPinterest implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksPinterestUrl: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksTiktok implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksTiktokUrl: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksTwitter implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksTwitterUrl: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MainMenuItemSocial_SectionFollowNetworks_SectionFollowNetworksYoutube implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  sectionFollowNetworksYoutubeUrl: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupBlog implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemCampusLocation: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupCustom implements WpAcfFieldGroup {
  """
  Select an option different than &#039;Default&#039; to show a selected button style. &lt;br/&gt;
  Use &#039;Automatic&#039; to change depending on the Menu Mode. Eg. When
  &#039;Automatic&#039; is selected and the menu is in &#039;Dark&#039; mode,
  the Button will be &#039;Light&#039;. This allows high contrast when your
  color palette allows it.
  """
  buttonStyle: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Use internal for links on the same website or app. Use external when adding a URL outside the website or app.
  """
  menuItemGroupDropdownItemGroupCustomLinkType: String
  menuItemGroupDropdownItemGroupCustomTarget: String
  menuItemGroupDropdownItemGroupCustomUrl: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupDivider implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupEvents implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemCampusLocation: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupHeader implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupHtml implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Use safe HTML tags (Eg. strong, div, table, em, span, etc.). Unsafe HTML tags
  (Eg. script, form, body, etc.) and invalid HTML is removed automatically.
  """
  itemGroupHtmlHtml: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupNews implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemCampusLocation: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemDropdown_mainMenuItemDropdownItems_MenuItemGroupDropdownItemGroupWatch implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemCampusLocation: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemEvents implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemCampusLocation: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemNews implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemCampusLocation: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemPage implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemCampusLocation: String
  mainMenuItemPagePage: WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemPage_MainMenuItemPagePage
  mainMenuItemPageTitle: String
}

union WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemPage_MainMenuItemPagePage = WpPage

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuItemWatch implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenuItemCampusLocation: String
}

"""Field Group"""
type WpMainMenu_Mainmenudetails_MainMenu_mainMenuItems_MainMenuItem_MainMenuMenuItemCustom implements WpAcfFieldGroup {
  """
  Select an option different than &#039;Default&#039; to show a selected button style. &lt;br/&gt;
  Use &#039;Automatic&#039; to change depending on the Menu Mode. Eg. When
  &#039;Automatic&#039; is selected and the menu is in &#039;Dark&#039; mode,
  the Button will be &#039;Light&#039;. This allows high contrast when your
  color palette allows it.
  """
  buttonStyle: String

  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Use internal for links on the same website or app. Use external when adding a URL outside the website or app.
  """
  mainMenuItemCustomLinkType: String
  mainMenuItemCustomTarget: String
  mainMenuItemCustomUrl: String
}

"""
Menus are the containers for navigation items. Menus can be assigned to menu
locations, which are typically registered by the active theme.
"""
type WpMenu implements Node & WpNode & WpDatabaseIdentifier @dontInfer {
  """The number of items in the menu"""
  count: Int

  """The unique identifier stored in the database"""
  databaseId: Int!

  """The locations a menu is assigned to"""
  locations: [WpMenuLocationEnum]

  """Connection between the Menu type and the MenuItem type"""
  menuItems: WpMenuToMenuItemConnection

  """Display name of the menu. Equivalent to WP_Term-&gt;name."""
  name: String

  """The url friendly name of the menu. Equivalent to WP_Term-&gt;slug"""
  slug: String
  nodeType: String
}

"""Registered menu locations"""
enum WpMenuLocationEnum {
  EMPTY
}

"""Connection between the Menu type and the MenuItem type"""
type WpMenuToMenuItemConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpMenuItem]
}

"""
Navigation menu items are the individual items assigned to a menu. These are rendered as the links in a navigation menu.
"""
type WpMenuItem implements Node & WpNode & WpDatabaseIdentifier @dontInfer {
  """Connection between the MenuItem type and the MenuItem type"""
  childItems: WpMenuItemToMenuItemConnection

  """Connection from MenuItem to it&#039;s connected node"""
  connectedNode: WpMenuItemToMenuItemLinkableConnectionEdge

  """Class attribute for the menu item link"""
  cssClasses: [String]

  """The unique identifier stored in the database"""
  databaseId: Int!

  """Description of the menu item."""
  description: String

  """Label or title of the menu item."""
  label: String

  """Link relationship (XFN) of the menu item."""
  linkRelationship: String

  """The locations the menu item&#039;s Menu is assigned to"""
  locations: [WpMenuLocationEnum]

  """The Menu a MenuItem is part of"""
  menu: WpMenuItemToMenuConnectionEdge

  """Menu item order"""
  order: Int

  """The database id of the parent menu item or null if it is the root"""
  parentDatabaseId: Int

  """The globally unique identifier of the parent nav menu item object."""
  parentId: ID

  """
  Path for the resource. Relative path for internal resources. Absolute path for external resources.
  """
  path: String

  """Target attribute for the menu item link."""
  target: String

  """Title attribute for the menu item link"""
  title: String

  """URL or destination of the menu item."""
  url: String
  nodeType: String
}

"""Connection between the MenuItem type and the MenuItem type"""
type WpMenuItemToMenuItemConnection {
  """The nodes of the connection, without the edges"""
  nodes: [WpMenuItem]
}

"""Connection between the MenuItem type and the MenuItemLinkable type"""
type WpMenuItemToMenuItemLinkableConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpMenuItemLinkable
}

"""Connection between the MenuItem type and the Menu type"""
type WpMenuItemToMenuConnectionEdge {
  """The node of the connection, without the edges"""
  node: WpMenu
}

"""The redirect type"""
type WpRedirect implements Node & WpNode & WpContentNode & WpUniformResourceIdentifiable & WpDatabaseIdentifier & WpNodeWithTemplate & WpMenuItemLinkable @dontInfer {
  """Connection between the ContentNode type and the ContentType type"""
  contentType: WpContentNodeToContentTypeConnectionEdge

  """The name of the Content Type the node belongs to"""
  contentTypeName: String!

  """The unique resource identifier path"""
  databaseId: Int!

  """Post publishing date."""
  date: Date @dateformat

  """The publishing date set in GMT."""
  dateGmt: Date @dateformat

  """The desired slug of the post"""
  desiredSlug: String

  """The RSS enclosure for the object"""
  enclosure: String

  """
  The global unique identifier for this post. This currently matches the value
  stored in WP_Post-&gt;guid and the guid column in the &quot;post_objects&quot;
  database table.
  """
  guid: String

  """Whether the node is a Content Node"""
  isContentNode: Boolean!

  """Whether the node is a Term"""
  isTermNode: Boolean!

  """The user that most recently edited the node"""
  lastEditedBy: WpContentNodeToEditLastConnectionEdge

  """The permalink of the post"""
  link: String

  """
  The local modified time for a post. If a post was recently updated the
  modified field will change to match the corresponding time.
  """
  modified: Date @dateformat

  """
  The GMT modified time for a post. If a post was recently updated the modified
  field will change to match the corresponding time in GMT.
  """
  modifiedGmt: Date @dateformat

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Redirect Params&quot; was set to Show in GraphQL.
  """
  redirect: WpRedirect_Redirect

  """The Yoast SEO data of the redirect"""
  seo: WpPostTypeSEO

  """
  The uri slug for the post. This is equivalent to the WP_Post-&gt;post_name
  field and the post_name column in the database for the
  &quot;post_objects&quot; table.
  """
  slug: String

  """The current status of the object"""
  status: String

  """The template assigned to the node"""
  template: WpContentTemplate

  """The unique resource identifier path"""
  uri: String
  nodeType: String
}

"""Field Group"""
type WpRedirect_Redirect implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  redirectFrompath: String
  redirectIspermanent: Boolean
  redirectTopath: String
}

"""The reading setting type"""
type WpReadingSettings {
  """Blog pages show at most."""
  postsPerPage: Int
}

"""The Yoast SEO site level configuration data"""
type WpSEOConfig {
  breadcrumbs: WpSEOBreadcrumbs
  contentTypes: WpSEOContentTypes
  openGraph: WpSEOOpenGraph
  redirects: [WpSEORedirect]
  schema: WpSEOSchema
  social: WpSEOSocial
  webmaster: WpSEOWebmaster
}

"""The Yoast SEO breadcrumb config"""
type WpSEOBreadcrumbs {
  archivePrefix: String
  boldLast: Boolean
  enabled: Boolean
  homeText: String
  notFoundText: String
  prefix: String
  searchPrefix: String
  separator: String
  showBlogPage: Boolean
}

"""The Yoast SEO search appearance content types"""
type WpSEOContentTypes {
  actionMonitorAction: WpSEOContentType
  campus: WpSEOContentType
  contentSection: WpSEOContentType
  course: WpSEOContentType
  customMenu: WpSEOContentType
  document: WpSEOContentType
  event: WpSEOContentType
  eventVenue: WpSEOContentType
  form: WpSEOContentType
  group: WpSEOContentType
  groupType: WpSEOContentType
  landingPage: WpSEOContentType
  lesson: WpSEOContentType
  linkitem: WpSEOContentType
  mainMenu: WpSEOContentType
  mediaItem: WpSEOContentType
  ministry: WpSEOContentType
  newspost: WpSEOContentType
  page: WpSEOContentType
  post: WpSEOContentType
  redirect: WpSEOContentType
  season: WpSEOContentType
  serie: WpSEOContentType
  speaker: WpSEOContentType
  videoOnDemand: WpSEOContentType
  volunteeropportunity: WpSEOContentType
}

"""he Yoast SEO search appearance content types fields"""
type WpSEOContentType {
  archive: WpSEOContentTypeArchive
  metaDesc: String
  metaRobotsNoindex: Boolean
  schema: WpSEOPageInfoSchema
  schemaType: String
  title: String
}

"""he Yoast SEO search appearance content types fields"""
type WpSEOContentTypeArchive {
  archiveLink: String
  breadcrumbTitle: String
  fullHead: String
  hasArchive: Boolean
  metaDesc: String
  metaRobotsNoindex: Boolean
  title: String
}

"""The Open Graph data"""
type WpSEOOpenGraph {
  defaultImage: WpMediaItem
  frontPage: WpSEOOpenGraphFrontPage
}

"""The Open Graph Front page data"""
type WpSEOOpenGraphFrontPage {
  description: String
  image: WpMediaItem
  title: String
}

"""The Yoast redirect data  (Yoast Premium only)"""
type WpSEORedirect {
  format: String
  origin: String
  target: String
  type: Int
}

"""The Yoast SEO schema data"""
type WpSEOSchema {
  companyLogo: WpMediaItem
  companyName: String
  companyOrPerson: String
  homeUrl: String
  inLanguage: String
  logo: WpMediaItem
  personLogo: WpMediaItem
  personName: String
  siteName: String
  siteUrl: String
  wordpressSiteName: String
}

"""The Yoast SEO Social media links"""
type WpSEOSocial {
  facebook: WpSEOSocialFacebook
  instagram: WpSEOSocialInstagram
  linkedIn: WpSEOSocialLinkedIn
  mySpace: WpSEOSocialMySpace
  pinterest: WpSEOSocialPinterest
  twitter: WpSEOSocialTwitter
  wikipedia: WpSEOSocialWikipedia
  youTube: WpSEOSocialYoutube
}

type WpSEOSocialFacebook {
  defaultImage: WpMediaItem
  url: String
}

type WpSEOSocialInstagram {
  url: String
}

type WpSEOSocialLinkedIn {
  url: String
}

type WpSEOSocialMySpace {
  url: String
}

type WpSEOSocialPinterest {
  metaTag: String
  url: String
}

type WpSEOSocialTwitter {
  cardType: WpSEOCardType
  username: String
}

"""Types of cards"""
enum WpSEOCardType {
  summary
  summary_large_image
}

type WpSEOSocialWikipedia {
  url: String
}

type WpSEOSocialYoutube {
  url: String
}

"""The Yoast SEO  webmaster fields"""
type WpSEOWebmaster {
  baiduVerify: String
  googleVerify: String
  msVerify: String
  yandexVerify: String
}

"""Website Settings options."""
type WpWebsiteGeneralSettings {
  pageSlug: String
  pageTitle: String

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Participation&quot; was set to Show in GraphQL.
  """
  participation: WpWebsiteGeneralSettings_Participation

  """
  Added to the GraphQL Schema because the ACF Field Group &quot;Website Settings&quot; was set to Show in GraphQL.
  """
  websiteSettings: WpWebsiteGeneralSettings_Websitesettings
}

"""Field Group"""
type WpWebsiteGeneralSettings_Participation implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  participationRaisehand: WpWebsiteGeneralSettings_Participation_ParticipationRaisehand
}

"""Field Group"""
type WpWebsiteGeneralSettings_Participation_ParticipationRaisehand implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  When Custom Links have been added to the Site Settings, it&#039;s possible to
  add to the list or replace it entirely on a campus or message basis.
  """
  participationRaisehandBehavior: String
  participationRaisehandCustom: [WpWebsiteGeneralSettings_Participation_ParticipationRaisehand_participationRaisehandCustom]
}

"""Field Group"""
type WpWebsiteGeneralSettings_Participation_ParticipationRaisehand_participationRaisehandCustom implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Add CSS class names separated by a space (Eg. &#039;my-class-one my-class-two)
  """
  participationRaisehandCustomClass: String
  participationRaisehandCustomIcon: WpMediaItem
  participationRaisehandCustomTarget: String
  participationRaisehandCustomTitle: String
  participationRaisehandCustomType: String
  participationRaisehandCustomUrl: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsApp: WpWebsiteGeneralSettings_Websitesettings_SettingsApp
  settingsAuthentication: WpWebsiteGeneralSettings_Websitesettings_SettingsAuthentication

  """Custom HTML code."""
  settingsCode: String

  """
  Don&#039;t include the &#039;style&#039; tag, add the CSS classes directly.
  """
  settingsCss: String

  """
  The default campus that first time visitor will see. A campus is required for having the website available.
  """
  settingsDefaultCampus: WpWebsiteGeneralSettings_Websitesettings_SettingsDefaultCampus
  settingsFooter: WpWebsiteGeneralSettings_Websitesettings_SettingsFooter

  """
  Select the Page your want to use as a legal disclaimer (Privacy Policy, Terms of Use, SMS, etc).
  """
  settingsLegalPage: WpWebsiteGeneralSettings_Websitesettings_SettingsLegalPage
  settingsMenus: WpWebsiteGeneralSettings_Websitesettings_SettingsMenus
  settingsNewsletter: WpWebsiteGeneralSettings_Websitesettings_SettingsNewsletter
  settingsPages: WpWebsiteGeneralSettings_Websitesettings_SettingsPages
  settingsSearch: WpWebsiteGeneralSettings_Websitesettings_SettingsSearch
  settingsSiteTitle: String
  settingsSocial: WpWebsiteGeneralSettings_Websitesettings_SettingsSocial
  settingsStyles: WpWebsiteGeneralSettings_Websitesettings_SettingsStyles
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsApp implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsAppApple: String
  settingsAppGoogle: String

  """
  Create a banner to promote your app on the Apple App Store or Google Play Store from a website.
  """
  settingsAppNativePrompt: Boolean
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsAuthentication implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsAuthenticationActive: Boolean
  settingsAuthenticationType: String
  settingsAuthenticationTypeExternal: WpWebsiteGeneralSettings_Websitesettings_SettingsAuthentication_SettingsAuthenticationTypeExternal
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsAuthentication_SettingsAuthenticationTypeExternal implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsAuthenticationTypeExternalTarget: String
  settingsAuthenticationTypeExternalUrl: String
}

union WpWebsiteGeneralSettings_Websitesettings_SettingsDefaultCampus = WpCampus

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsFooter implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  Legal Disclaimer. If anything is setup up, default will be used (&quot;Copyright ©. All Rights Reserved&quot;)
  """
  settingsFooterDisclaimer: String
}

union WpWebsiteGeneralSettings_Websitesettings_SettingsLegalPage = WpPage

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsMenus implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  menuPositions: WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  mainMenu: WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions_MainMenu
  topMenu: WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions_TopMenu
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions_MainMenu implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  menu: WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions_MainMenu_Menu
}

union WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions_MainMenu_Menu = WpMainMenu

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions_TopMenu implements WpAcfFieldGroup {
  campusSelector: Boolean

  """The name of the ACF Field Group"""
  fieldGroupName: String
  languageSelector: Boolean
  menu: WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions_TopMenu_Menu
  search: Boolean
}

union WpWebsiteGeneralSettings_Websitesettings_SettingsMenus_MenuPositions_TopMenu_Menu = WpMainMenu

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsNewsletter implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsNewsletterProvider: String
  settingsNewsletterUrl: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsPagesBlog: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesBlog
  settingsPagesCourses: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesCourses
  settingsPagesEvents: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesEvents
  settingsPagesGroups: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesGroups
  settingsPagesMinistries: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesMinistries
  settingsPagesVolunteer: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesVolunteer
  settingsPagesWatch: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesWatch
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesBlog implements WpAcfFieldGroup {
  active: Boolean
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesBlog_ItemConfiguration
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesBlog_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesBlog_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String
  skip: Float
  sorting: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesBlog_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesCourses implements WpAcfFieldGroup {
  active: Boolean
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesCourses_ItemConfiguration
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesCourses_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesCourses_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String
  skip: Float
  sorting: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesCourses_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesEvents implements WpAcfFieldGroup {
  active: Boolean
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesEvents_ItemConfiguration
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesEvents_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesEvents_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String
  skip: Float
  sorting: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesEvents_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesGroups implements WpAcfFieldGroup {
  active: Boolean
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesGroups_ItemConfiguration
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesGroups_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesGroups_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String
  skip: Float
  sorting: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesGroups_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesMinistries implements WpAcfFieldGroup {
  active: Boolean
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesMinistries_ItemConfiguration
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesMinistries_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesMinistries_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String
  skip: Float
  sorting: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesMinistries_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesVolunteer implements WpAcfFieldGroup {
  active: Boolean
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesVolunteer_ItemConfiguration
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesVolunteer_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesVolunteer_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String
  skip: Float
  sorting: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesVolunteer_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesWatch implements WpAcfFieldGroup {
  active: Boolean
  feedLayout: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
  itemConfiguration: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesWatch_ItemConfiguration
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesWatch_ItemConfiguration implements WpAcfFieldGroup {
  """It affects the button of each blurb."""
  buttonBehavior: WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesWatch_ItemConfiguration_ButtonBehavior

  """The name of the ACF Field Group"""
  fieldGroupName: String
  hideButton: Boolean
  hideExcerpt: Boolean
  hideImage: Boolean
  hideSubtitle: Boolean
  hideTitle: Boolean

  """
  If the border is not selected, the default bootstrap style will be applied.
  Select &#039;border&#039; to add a border all around the element or
  border-&lt;em&gt;side&lt;/em&gt; to select where you want the border.
  &#039;border-0&#039; add the border on the inside of the element. &lt;a
  href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorder: String

  """
  If the border is not selected, the default bootstrap style will be applied. &lt;a href=&#039;https://getbootstrap.com/docs/4.1/utilities/borders/#border-color&#039;&gt;Read
  Bootstrap Docs&lt;/a&gt;.
  """
  itemBorderColor: String

  """
  It will add the class to each item. Useful for global styling on the current carousel.
  """
  itemClass: String

  """Gap between each item on the item list."""
  itemGap: String
  itemImageAspect: String

  """
  &lt;a href=&#039;https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit&#039;
  target=&#039;_blank&#039;&gt;See MDN documentation&lt;/a&gt;
  """
  itemImageFit: String
  itemImagePosition: String
  itemOrientation: String
  itemTruncate: Boolean

  """
  Specifies how many lines of text should be preserved until it gets truncated.
  """
  itemTruncateLines: Float
  itemType: String

  """Maximum number of items to show."""
  maxItems: Float
  orderBy: String
  skip: Float
  sorting: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsPages_SettingsPagesWatch_ItemConfiguration_ButtonBehavior implements WpAcfFieldGroup {
  buttonCss: String
  buttonCssRemoveDefault: Boolean
  buttonStretch: Boolean
  buttonTarget: String
  buttonText: String

  """The name of the ACF Field Group"""
  fieldGroupName: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsSearch implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsSearchFunctions: WpWebsiteGeneralSettings_Websitesettings_SettingsSearch_SettingsSearchFunctions
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsSearch_SettingsSearchFunctions implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsSearchFunctionsAttachmentsActive: Boolean
  settingsSearchFunctionsCoursesActive: Boolean
  settingsSearchFunctionsEventsActive: Boolean
  settingsSearchFunctionsGroupTypesActive: Boolean
  settingsSearchFunctionsGroupsActive: Boolean
  settingsSearchFunctionsMinistriesActive: Boolean
  settingsSearchFunctionsNewsActive: Boolean
  settingsSearchFunctionsPagesActive: Boolean
  settingsSearchFunctionsPostsActive: Boolean
  settingsSearchFunctionsSeriesActive: Boolean
  settingsSearchFunctionsVideosActive: Boolean
  settingsSearchFunctionsVolunteeringActive: Boolean
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsSocial implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsSocialFacebookUrl: String
  settingsSocialInstagramUrl: String
  settingsSocialTwitterUrl: String
  settingsSocialYoutubeUrl: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsStyles implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesColors: WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesColors
  settingsStylesFont: WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesFont
  settingsStylesFooter: WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesFooter
  settingsStylesGraphics: WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesGraphics
  settingsStylesHeader: WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesHeader
  settingsStylesLayout: WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesLayout
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesColors implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """The body color."""
  settingsStylesColorsBackground: String
  settingsStylesColorsDanger: String
  settingsStylesColorsDark: String
  settingsStylesColorsFifth: String
  settingsStylesColorsFourth: String
  settingsStylesColorsInfo: String
  settingsStylesColorsLight: String
  settingsStylesColorsPrimary: String
  settingsStylesColorsSecondary: String
  settingsStylesColorsSixth: String
  settingsStylesColorsSuccess: String
  settingsStylesColorsThird: String
  settingsStylesColorsWarning: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesFont implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesFontSize: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesFooter implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesFooterColor: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesGraphics implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """Min. image size 512px x 512px."""
  settingsStylesGraphicsFavicon: WpMediaItem

  """
  Global logo. It&#039;s recommended to use SVG. It can be rewritten for each campus.
  """
  settingsStylesGraphicsLogo: WpMediaItem
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesHeader implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesHeaderColor: String
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesLayout implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String

  """
  The spacing for the padding and margin will be automatically calculated based
  on the space provided. CSS classes for margin and padding will be
  auto-generated, read more at &lt;a
  href=&quot;https://getbootstrap.com/docs/4.6/utilities/spacing/&quot;
  target=&quot;_blank&quot;&gt;Spacing&lt;/a&gt;
  """
  settingsStylesLayoutSpacer: WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesLayout_SettingsStylesLayoutSpacer
  settingsStylesLayoutWidth: WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesLayout_SettingsStylesLayoutWidth
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesLayout_SettingsStylesLayoutSpacer implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesLayoutSpacerUnit: String
  settingsStylesLayoutSpacerValue: Float
}

"""Field Group"""
type WpWebsiteGeneralSettings_Websitesettings_SettingsStyles_SettingsStylesLayout_SettingsStylesLayoutWidth implements WpAcfFieldGroup {
  """The name of the ACF Field Group"""
  fieldGroupName: String
  settingsStylesLayoutWidthLg: Float
  settingsStylesLayoutWidthMd: Float
  settingsStylesLayoutWidthSm: Float
  settingsStylesLayoutWidthXl: Float
}

"""Information needed by gatsby-source-wordpress."""
type WpWPGatsby {
  """Returns wether or not pretty permalinks are enabled."""
  arePrettyPermalinksEnabled: Boolean

  """Wether or not the Preview frontend URL is online."""
  isPreviewFrontendOnline: Boolean
}

"""The writing setting type"""
type WpWritingSettings {
  """Default post category."""
  defaultCategory: Int

  """Default post format."""
  defaultPostFormat: String

  """Convert emoticons like :-) and :-P to graphics on display."""
  useSmilies: Boolean
}

"""A Comment Author object"""
type WpCommentAuthor implements Node & WpNode & WpCommenter @dontInfer {
  """
  Avatar object for user. The avatar object can be retrieved in different sizes by specifying the size argument.
  """
  avatar: WpAvatar

  """Identifies the primary key from the database."""
  databaseId: Int!

  """The email for the comment author"""
  email: String

  """The name for the comment author."""
  name: String

  """The url the comment author."""
  url: String
  nodeType: String
}

"""The template assigned to the node"""
type WpDefaultTemplate implements WpContentTemplate {
  """The name of the template"""
  templateName: String
}

"""The template assigned to the node"""
type WpTemplate_CustomBlankPage implements WpContentTemplate {
  """The name of the template"""
  templateName: String
}

"""The template assigned to the node"""
type WpTemplate_RecoverPasswordPage implements WpContentTemplate {
  """The name of the template"""
  templateName: String
}

"""Non-node WPGraphQL root fields."""
type Wp implements Node @dontInfer {
  """Entry point to get all settings for the site"""
  allSettings: WpSettings

  """Get language list"""
  defaultLanguage: WpLanguage

  """Fields of the &#039;DiscussionSettings&#039; settings group"""
  discussionSettings: WpDiscussionSettings

  """Fields of the &#039;GeneralSettings&#039; settings group"""
  generalSettings: WpGeneralSettings

  """List available languages"""
  languages: [WpLanguage]

  """Fields of the &#039;ReadingSettings&#039; settings group"""
  readingSettings: WpReadingSettings

  """
  Returns an MD5 hash of the schema, useful in determining if the schema has changed.
  """
  schemaMd5: String

  """Returns seo site data"""
  seo: WpSEOConfig

  """Returns the current user"""
  viewer: WpUser

  """Website Settings options."""
  websiteGeneralSettings: WpWebsiteGeneralSettings

  """Information needed by gatsby-source-wordpress."""
  wpGatsby: WpWPGatsby

  """Fields of the &#039;WritingSettings&#039; settings group"""
  writingSettings: WpWritingSettings
  nodeType: String
}

enum ImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

enum ImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

input BlurredOptions {
  """Width of the generated low-res preview. Default is 20px"""
  width: Int

  """
  Force the output format for the low-res preview. Default is to use the same
  format as the input. You should rarely need to change this
  """
  toFormat: ImageFormat
}

input JPGOptions {
  quality: Int
  progressive: Boolean = true
}

input PNGOptions {
  quality: Int
  compressionSpeed: Int = 4
}

input WebPOptions {
  quality: Int
}

input AVIFOptions {
  quality: Int
  lossless: Boolean
  speed: Int
}

input TransformOptions {
  grayscale: Boolean
  duotone: DuotoneGradient
  rotate: Int
  trim: Float
  cropFocus: ImageCropFocus = ATTENTION
  fit: ImageFit = COVER
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

type ImageSharp implements Node @childOf(types: ["File"]) @dontInfer {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat, toFormatBase64: ImageFormat, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int, trim: Float): ImageSharpFixed
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat
    toFormatBase64: ImageFormat
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int
    trim: Float
    sizes: String

    """
    A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    """
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  gatsbyImageData(
    """
    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if
    it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: ImageLayout = CONSTRAINED

    """
    The display width of the generated image for layout = FIXED, and the maximum
    display width of the largest image for layout = CONSTRAINED.
    Ignored if layout = FLUID.
    """
    width: Int

    """
    The display height of the generated image for layout = FIXED, and the
    maximum display height of the largest image for layout = CONSTRAINED.
    The image will be cropped if the aspect ratio does not match the source
    image. If omitted, it is calculated from the supplied width,
    matching the aspect ratio of the source image.
    """
    height: Int

    """
    If set along with width or height, this will set the value of the other
    dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float

    """
    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    TRACED_SVG: a low-resolution traced SVG of the image.
    NONE: no placeholder. Set "background" to use a fixed background color.
    """
    placeholder: ImagePlaceholder

    """
    Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    """
    blurredOptions: BlurredOptions

    """
    Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    """
    tracedSVGOptions: Potrace

    """
    The image formats to generate. Valid values are "AUTO" (meaning the same
    format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    The default value is [AUTO, WEBP], and you should rarely need to change
    this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted
    results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [ImageFormat]

    """
    A list of image pixel densities to generate. It will never generate images
    larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1,
    2] for CONSTRAINED. In this case, an image with a constrained layout
    and width = 400 would generate images at 100, 200, 400 and 800px wide.
    Ignored for FULL_WIDTH images, which use breakpoints instead
    """
    outputPixelDensities: [Float]

    """
    Specifies the image widths to generate. For FIXED and CONSTRAINED images it
    is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override
    the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int]

    """
    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download.
    You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    does not actually span the full width of the screen, in which case you should pass the correct size here.
    """
    sizes: String

    """The default quality. This is overridden by any format-specific options"""
    quality: Int

    """Options to pass to sharp when generating JPG images."""
    jpgOptions: JPGOptions

    """Options to pass to sharp when generating PNG images."""
    pngOptions: PNGOptions

    """Options to pass to sharp when generating WebP images."""
    webpOptions: WebPOptions

    """Options to pass to sharp when generating AVIF images."""
    avifOptions: AVIFOptions

    """
    Options to pass to sharp to control cropping and other image manipulations.
    """
    transformOptions: TransformOptions

    """
    Background color applied to the wrapper. Also passed to sharp to use as a
    background when "letterboxing" an image to another aspect ratio.
    """
    backgroundColor: String
  ): JSON!
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean, duotone: DuotoneGradient, base64: Boolean, traceSVG: Potrace, toFormat: ImageFormat, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int, trim: Float): ImageSharpResize
}